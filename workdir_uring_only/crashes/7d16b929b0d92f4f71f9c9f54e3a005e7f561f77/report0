BUG: kernel NULL pointer dereference, address: 0000000000000198
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 2fe27067 P4D 2fe27067 PUD 1c13c067 PMD 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 0 PID: 60563 Comm: syz-executor.1 Not tainted 6.9.0-rc4 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:file_can_poll include/linux/poll.h:77 [inline]
RIP: 0010:io_file_can_poll io_uring/io_uring.h:445 [inline]
RIP: 0010:io_ring_buffer_select io_uring/kbuf.c:164 [inline]
RIP: 0010:io_buffer_select+0x4a0/0x520 io_uring/kbuf.c:193
Code: 00 01 00 00 00 4c 21 f8 48 89 c6 48 89 45 d0 e8 e6 14 bc fe 48 8b 45 d0 48 85 c0 0f 85 21 fe ff ff e8 54 19 bc fe 49 8b 04 24 <48> 8b 80 98 01 00 00 48 83 78 40 00 0f 84 f2 fd ff ff e8 39 19 bc
RSP: 0018:ffff888028543d08 EFLAGS: 00010206
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffc9000731f000
RDX: 0000000000040000 RSI: ffffffff826da5ac RDI: 0000000000000007
RBP: ffff888028543d48 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffff888030e9b900
R13: ffff88802c2d6440 R14: ffff88802eba9000 R15: 0000000000200065
FS:  00007f2d137e1640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000198 CR3: 0000000028748002 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 __io_import_iovec+0x16b/0x210 io_uring/rw.c:439
 io_import_iovec io_uring/rw.c:464 [inline]
 io_rw_prep_async io_uring/rw.c:604 [inline]
 io_readv_prep_async+0x43/0xd0 io_uring/rw.c:618
 io_req_prep_async+0xcb/0x150 io_uring/io_uring.c:1813
 io_submit_sqe io_uring/io_uring.c:2349 [inline]
 io_submit_sqes+0x7b6/0xd60 io_uring/io_uring.c:2492
 __do_sys_io_uring_enter+0x4df/0xaa0 io_uring/io_uring.c:3668
 __se_sys_io_uring_enter io_uring/io_uring.c:3603 [inline]
 __x64_sys_io_uring_enter+0x2a/0x40 io_uring/io_uring.c:3603
 x64_sys_call+0x14b9/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:427
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f2d12a8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f2d137e1028 EFLAGS: 00000246 ORIG_RAX: 00000000000001aa
RAX: ffffffffffffffda RBX: 00007f2d12bcc120 RCX: 00007f2d12a8fd6d
RDX: 0000000000000000 RSI: 0000000000004f2b RDI: 0000000000000004
RBP: 00007f2d12af14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000006e R14: 00007f2d12bcc120 R15: 00007f2d137c1000
 </TASK>
Modules linked in:
CR2: 0000000000000198
---[ end trace 0000000000000000 ]---
RIP: 0010:file_can_poll include/linux/poll.h:77 [inline]
RIP: 0010:io_file_can_poll io_uring/io_uring.h:445 [inline]
RIP: 0010:io_ring_buffer_select io_uring/kbuf.c:164 [inline]
RIP: 0010:io_buffer_select+0x4a0/0x520 io_uring/kbuf.c:193
Code: 00 01 00 00 00 4c 21 f8 48 89 c6 48 89 45 d0 e8 e6 14 bc fe 48 8b 45 d0 48 85 c0 0f 85 21 fe ff ff e8 54 19 bc fe 49 8b 04 24 <48> 8b 80 98 01 00 00 48 83 78 40 00 0f 84 f2 fd ff ff e8 39 19 bc
RSP: 0018:ffff888028543d08 EFLAGS: 00010206
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffc9000731f000
RDX: 0000000000040000 RSI: ffffffff826da5ac RDI: 0000000000000007
RBP: ffff888028543d48 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffff888030e9b900
R13: ffff88802c2d6440 R14: ffff88802eba9000 R15: 0000000000200065
FS:  00007f2d137e1640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000198 CR3: 0000000028748002 CR4: 0000000000770ef0
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	00 01                	add    %al,(%rcx)
   2:	00 00                	add    %al,(%rax)
   4:	00 4c 21 f8          	add    %cl,-0x8(%rcx,%riz,1)
   8:	48 89 c6             	mov    %rax,%rsi
   b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   f:	e8 e6 14 bc fe       	call   0xfebc14fa
  14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	0f 85 21 fe ff ff    	jne    0xfffffe42
  21:	e8 54 19 bc fe       	call   0xfebc197a
  26:	49 8b 04 24          	mov    (%r12),%rax
* 2a:	48 8b 80 98 01 00 00 	mov    0x198(%rax),%rax <-- trapping instruction
  31:	48 83 78 40 00       	cmpq   $0x0,0x40(%rax)
  36:	0f 84 f2 fd ff ff    	je     0xfffffe2e
  3c:	e8                   	.byte 0xe8
  3d:	39 19                	cmp    %ebx,(%rcx)
  3f:	bc                   	.byte 0xbc
