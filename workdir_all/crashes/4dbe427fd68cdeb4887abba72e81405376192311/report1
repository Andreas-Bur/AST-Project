BUG: kernel NULL pointer dereference, address: 0000000000000028
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 26475067 P4D 26475067 PUD 26461067 PMD 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 1 PID: 11988 Comm: syz-executor.4 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:fsnotify_parent include/linux/fsnotify.h:68 [inline]
RIP: 0010:fsnotify_file include/linux/fsnotify.h:106 [inline]
RIP: 0010:fsnotify_close include/linux/fsnotify.h:387 [inline]
RIP: 0010:__fput+0x2df/0x540 fs/file_table.c:408
Code: 5b 41 5c 41 5d 41 5e 41 5f 5d e9 77 88 b3 03 e8 67 06 cd ff 49 8b 84 24 88 01 00 00 31 ff 48 89 45 c8 48 8b 40 68 48 89 45 b8 <48> 8b 40 28 48 8b 80 78 07 00 00 48 89 c6 48 89 45 c0 e8 ba 01 cd
RSP: 0018:ffff888033f53e60 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 0000000000080005 RCX: ffffc90005801000
RDX: 0000000000040000 RSI: ffffffff815cb899 RDI: 0000000000000000
RBP: ffff888033f53eb0 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 000000000010000a R12: ffff888010336a00
R13: 0000000000000010 R14: ffff88801a7ce9a8 R15: ffff8880099eeaa0
FS:  00007f0cab983640(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000028 CR3: 0000000043de4003 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 ____fput+0x1a/0x30 fs/file_table.c:450
 task_work_run+0xa1/0x110 kernel/task_work.c:180
 resume_user_mode_work include/linux/resume_user_mode.h:50 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:114 [inline]
 exit_to_user_mode_prepare include/linux/entry-common.h:328 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
 syscall_exit_to_user_mode+0x204/0x210 kernel/entry/common.c:218
 do_syscall_64+0xd0/0x200 arch/x86/entry/common.c:89
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f0caac8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f0cab983028 EFLAGS: 00000246 ORIG_RAX: 00000000000001aa
RAX: 0000000000002000 RBX: 00007f0caadcbf80 RCX: 00007f0caac8fd6d
RDX: 0000000000000000 RSI: 0000000000004bfd RDI: 000000000000000b
RBP: 00007f0caacf14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007f0caadcbf80 R15: 00007f0cab963000
 </TASK>
Modules linked in:
CR2: 0000000000000028
---[ end trace 0000000000000000 ]---
RIP: 0010:fsnotify_parent include/linux/fsnotify.h:68 [inline]
RIP: 0010:fsnotify_file include/linux/fsnotify.h:106 [inline]
RIP: 0010:fsnotify_close include/linux/fsnotify.h:387 [inline]
RIP: 0010:__fput+0x2df/0x540 fs/file_table.c:408
Code: 5b 41 5c 41 5d 41 5e 41 5f 5d e9 77 88 b3 03 e8 67 06 cd ff 49 8b 84 24 88 01 00 00 31 ff 48 89 45 c8 48 8b 40 68 48 89 45 b8 <48> 8b 40 28 48 8b 80 78 07 00 00 48 89 c6 48 89 45 c0 e8 ba 01 cd
RSP: 0018:ffff888033f53e60 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 0000000000080005 RCX: ffffc90005801000
RDX: 0000000000040000 RSI: ffffffff815cb899 RDI: 0000000000000000
RBP: ffff888033f53eb0 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 000000000010000a R12: ffff888010336a00
R13: 0000000000000010 R14: ffff88801a7ce9a8 R15: ffff8880099eeaa0
FS:  00007f0cab983640(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000028 CR3: 0000000043de4003 CR4: 0000000000770ef0
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	5b                   	pop    %rbx
   1:	41 5c                	pop    %r12
   3:	41 5d                	pop    %r13
   5:	41 5e                	pop    %r14
   7:	41 5f                	pop    %r15
   9:	5d                   	pop    %rbp
   a:	e9 77 88 b3 03       	jmp    0x3b38886
   f:	e8 67 06 cd ff       	call   0xffcd067b
  14:	49 8b 84 24 88 01 00 	mov    0x188(%r12),%rax
  1b:	00
  1c:	31 ff                	xor    %edi,%edi
  1e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  22:	48 8b 40 68          	mov    0x68(%rax),%rax
  26:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
* 2a:	48 8b 40 28          	mov    0x28(%rax),%rax <-- trapping instruction
  2e:	48 8b 80 78 07 00 00 	mov    0x778(%rax),%rax
  35:	48 89 c6             	mov    %rax,%rsi
  38:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  3c:	e8                   	.byte 0xe8
  3d:	ba                   	.byte 0xba
  3e:	01 cd                	add    %ecx,%ebp
