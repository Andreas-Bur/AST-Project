======================================================
WARNING: possible circular locking dependency detected
6.9.0-rc4 #2 Not tainted
------------------------------------------------------
syz-executor.5/49536 is trying to acquire lock:
ffff8880312454f8 (&HFS_I(tree->inode)->extents_lock){+.+.}-{3:3}, at: hfs_extend_file+0x32/0x400 fs/hfs/extent.c:397

but task is already holding lock:
ffff88800fa030b0 (&tree->tree_lock/1){+.+.}-{3:3}, at: hfs_find_init+0xd2/0x120 fs/hfs/bfind.c:33

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&tree->tree_lock/1){+.+.}-{3:3}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfs_find_init+0xd2/0x120 fs/hfs/bfind.c:33
       hfs_ext_read_extent+0x73/0x280 fs/hfs/extent.c:200
       hfs_extend_file+0x1ec/0x400 fs/hfs/extent.c:401
       hfs_bmap_reserve+0x33/0xd0 fs/hfs/btree.c:234
       hfs_cat_create+0xaa/0x470 fs/hfs/catalog.c:104
       hfs_create+0x51/0xc0 fs/hfs/dir.c:202
       lookup_open.isra.0+0x91f/0xa30 fs/namei.c:3497
       open_last_lookups fs/namei.c:3566 [inline]
       path_openat+0x5d3/0x1210 fs/namei.c:3796
       do_filp_open+0xb9/0x190 fs/namei.c:3826
       do_sys_openat2+0xc4/0x110 fs/open.c:1406
       do_sys_open fs/open.c:1421 [inline]
       __do_sys_openat fs/open.c:1437 [inline]
       __se_sys_openat fs/open.c:1432 [inline]
       __x64_sys_openat+0x78/0xd0 fs/open.c:1432
       x64_sys_call+0x1b08/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:258
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&HFS_I(tree->inode)->extents_lock){+.+.}-{3:3}:
       check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain kernel/locking/lockdep.c:3869 [inline]
       __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfs_extend_file+0x32/0x400 fs/hfs/extent.c:397
       hfs_bmap_reserve+0x33/0xd0 fs/hfs/btree.c:234
       __hfs_ext_write_extent+0xf0/0x130 fs/hfs/extent.c:121
       __hfs_ext_cache_extent fs/hfs/extent.c:174 [inline]
       hfs_ext_read_extent+0x251/0x280 fs/hfs/extent.c:202
       hfs_extend_file+0x1ec/0x400 fs/hfs/extent.c:401
       hfs_get_block+0xd2/0x3a0 fs/hfs/extent.c:353
       __block_write_begin_int+0x255/0xb10 fs/buffer.c:2105
       __block_write_begin fs/buffer.c:2154 [inline]
       block_write_begin+0x99/0x2c0 fs/buffer.c:2213
       cont_write_begin+0x2d9/0x400 fs/buffer.c:2567
       hfs_write_begin+0x5a/0xd0 fs/hfs/inode.c:53
       cont_expand_zero fs/buffer.c:2494 [inline]
       cont_write_begin+0x164/0x400 fs/buffer.c:2557
       hfs_write_begin+0x5a/0xd0 fs/hfs/inode.c:53
       hfs_file_truncate+0x3f4/0x4b0 fs/hfs/extent.c:494
       hfs_inode_setattr+0x27e/0x300 fs/hfs/inode.c:652
       notify_change+0x69f/0x9d0 fs/attr.c:497
       do_truncate+0xc2/0x110 fs/open.c:65
       do_ftruncate+0x32c/0x430 fs/open.c:181
       do_sys_ftruncate fs/open.c:199 [inline]
       __do_sys_ftruncate fs/open.c:207 [inline]
       __se_sys_ftruncate fs/open.c:205 [inline]
       __x64_sys_ftruncate+0x6a/0xc0 fs/open.c:205
       x64_sys_call+0x54b/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:78
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&tree->tree_lock/1);
                               lock(&HFS_I(tree->inode)->extents_lock);
                               lock(&tree->tree_lock/1);
  lock(&HFS_I(tree->inode)->extents_lock);

 *** DEADLOCK ***

4 locks held by syz-executor.5/49536:
 #0: ffff88800fa02420 (sb_writers#25){.+.+}-{0:0}, at: do_sys_ftruncate fs/open.c:199 [inline]
 #0: ffff88800fa02420 (sb_writers#25){.+.+}-{0:0}, at: __do_sys_ftruncate fs/open.c:207 [inline]
 #0: ffff88800fa02420 (sb_writers#25){.+.+}-{0:0}, at: __se_sys_ftruncate fs/open.c:205 [inline]
 #0: ffff88800fa02420 (sb_writers#25){.+.+}-{0:0}, at: __x64_sys_ftruncate+0x6a/0xc0 fs/open.c:205
 #1: ffff88802ad1d6a8 (&sb->s_type->i_mutex_key#34){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:795 [inline]
 #1: ffff88802ad1d6a8 (&sb->s_type->i_mutex_key#34){+.+.}-{3:3}, at: do_truncate+0xb1/0x110 fs/open.c:63
 #2: ffff88802ad1d4f8 (&HFS_I(inode)->extents_lock#2){+.+.}-{3:3}, at: hfs_extend_file+0x32/0x400 fs/hfs/extent.c:397
 #3: ffff88800fa030b0 (&tree->tree_lock/1){+.+.}-{3:3}, at: hfs_find_init+0xd2/0x120 fs/hfs/bfind.c:33

stack backtrace:
CPU: 1 PID: 49536 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_circular_bug+0x2d5/0x430 kernel/locking/lockdep.c:2060
 check_noncircular+0x10e/0x120 kernel/locking/lockdep.c:2187
 check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __mutex_lock_common kernel/locking/mutex.c:608 [inline]
 __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
 mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
 hfs_extend_file+0x32/0x400 fs/hfs/extent.c:397
 hfs_bmap_reserve+0x33/0xd0 fs/hfs/btree.c:234
 __hfs_ext_write_extent+0xf0/0x130 fs/hfs/extent.c:121
 __hfs_ext_cache_extent fs/hfs/extent.c:174 [inline]
 hfs_ext_read_extent+0x251/0x280 fs/hfs/extent.c:202
 hfs_extend_file+0x1ec/0x400 fs/hfs/extent.c:401
 hfs_get_block+0xd2/0x3a0 fs/hfs/extent.c:353
 __block_write_begin_int+0x255/0xb10 fs/buffer.c:2105
 __block_write_begin fs/buffer.c:2154 [inline]
 block_write_begin+0x99/0x2c0 fs/buffer.c:2213
 cont_write_begin+0x2d9/0x400 fs/buffer.c:2567
 hfs_write_begin+0x5a/0xd0 fs/hfs/inode.c:53
 cont_expand_zero fs/buffer.c:2494 [inline]
 cont_write_begin+0x164/0x400 fs/buffer.c:2557
 hfs_write_begin+0x5a/0xd0 fs/hfs/inode.c:53
 hfs_file_truncate+0x3f4/0x4b0 fs/hfs/extent.c:494
 hfs_inode_setattr+0x27e/0x300 fs/hfs/inode.c:652
 notify_change+0x69f/0x9d0 fs/attr.c:497
 do_truncate+0xc2/0x110 fs/open.c:65
 do_ftruncate+0x32c/0x430 fs/open.c:181
 do_sys_ftruncate fs/open.c:199 [inline]
 __do_sys_ftruncate fs/open.c:207 [inline]
 __se_sys_ftruncate fs/open.c:205 [inline]
 __x64_sys_ftruncate+0x6a/0xc0 fs/open.c:205
 x64_sys_call+0x54b/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:78
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fa94468fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fa9454e9028 EFLAGS: 00000246 ORIG_RAX: 000000000000004d
RAX: ffffffffffffffda RBX: 00007fa9447cbf80 RCX: 00007fa94468fd6d
RDX: 0000000000000000 RSI: 0000000008800000 RDI: 0000000000000005
RBP: 00007fa9446f14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007fa9447cbf80 R15: 00007fa9454c9000
 </TASK>
syz-executor.5: attempt to access beyond end of device
loop5: rw=0, sector=25825, nr_sectors = 1 limit=64
Buffer I/O error on dev loop5, logical block 25825, async page read
syz-executor.5: attempt to access beyond end of device
loop5: rw=0, sector=25826, nr_sectors = 1 limit=64
Buffer I/O error on dev loop5, logical block 25826, async page read
syz-executor.5: attempt to access beyond end of device
loop5: rw=0, sector=25827, nr_sectors = 1 limit=64
Buffer I/O error on dev loop5, logical block 25827, async page read
