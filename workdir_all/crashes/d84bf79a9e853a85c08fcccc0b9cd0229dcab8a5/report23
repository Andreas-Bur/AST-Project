======================================================
WARNING: possible circular locking dependency detected
6.9.0-rc4 #2 Not tainted
------------------------------------------------------
syz-executor.4/18473 is trying to acquire lock:
ffff88801dccf0b0 (&tree->tree_lock#2){+.+.}-{3:3}, at: hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595

but task is already holding lock:
ffff88802b363508 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}, at: hfsplus_file_truncate+0x96/0x380 fs/hfsplus/extents.c:576

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfsplus_file_extend+0x83/0x590 fs/hfsplus/extents.c:457
       hfsplus_bmap_reserve+0xd5/0x110 fs/hfsplus/btree.c:358
       hfsplus_rename_cat+0xd5/0x5f0 fs/hfsplus/catalog.c:456
       hfsplus_rename+0xb7/0x120 fs/hfsplus/dir.c:552
       vfs_rename+0x104a/0x14b0 fs/namei.c:4880
       do_renameat2+0x877/0x8d0 fs/namei.c:5037
       __do_sys_renameat2 fs/namei.c:5071 [inline]
       __se_sys_renameat2 fs/namei.c:5068 [inline]
       __x64_sys_renameat2+0x62/0x80 fs/namei.c:5068
       x64_sys_call+0x1945/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:317
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&tree->tree_lock#2){+.+.}-{3:3}:
       check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain kernel/locking/lockdep.c:3869 [inline]
       __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595
       hfsplus_delete_inode+0xd2/0x100 fs/hfsplus/inode.c:450
       hfsplus_unlink+0x214/0x2c0 fs/hfsplus/dir.c:405
       vfs_unlink+0x1f6/0x490 fs/namei.c:4335
       do_unlinkat+0x35b/0x3f0 fs/namei.c:4399
       __do_sys_unlink fs/namei.c:4447 [inline]
       __se_sys_unlink fs/namei.c:4445 [inline]
       __x64_sys_unlink+0x67/0x90 fs/namei.c:4445
       x64_sys_call+0x2004/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:88
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&HFSPLUS_I(inode)->extents_lock);
                               lock(&tree->tree_lock#2);
                               lock(&HFSPLUS_I(inode)->extents_lock);
  lock(&tree->tree_lock#2);

 *** DEADLOCK ***

5 locks held by syz-executor.4/18473:
 #0: ffff88801dccb420 (sb_writers#32){.+.+}-{0:0}, at: do_unlinkat+0xcb/0x3f0 fs/namei.c:4382
 #1: ffff88802b367180 (&type->i_mutex_dir_key#14/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:830 [inline]
 #1: ffff88802b367180 (&type->i_mutex_dir_key#14/1){+.+.}-{3:3}, at: do_unlinkat+0x177/0x3f0 fs/namei.c:4386
 #2: ffff88802b363700 (&sb->s_type->i_mutex_key#35){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:795 [inline]
 #2: ffff88802b363700 (&sb->s_type->i_mutex_key#35){+.+.}-{3:3}, at: vfs_unlink+0x74/0x490 fs/namei.c:4324
 #3: ffff88801443f598 (&sbi->vh_mutex){+.+.}-{3:3}, at: hfsplus_unlink+0x66/0x2c0 fs/hfsplus/dir.c:370
 #4: ffff88802b363508 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}, at: hfsplus_file_truncate+0x96/0x380 fs/hfsplus/extents.c:576

stack backtrace:
CPU: 0 PID: 18473 Comm: syz-executor.4 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_circular_bug+0x2d5/0x430 kernel/locking/lockdep.c:2060
 check_noncircular+0x10e/0x120 kernel/locking/lockdep.c:2187
 check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __mutex_lock_common kernel/locking/mutex.c:608 [inline]
 __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
 mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
 hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595
 hfsplus_delete_inode+0xd2/0x100 fs/hfsplus/inode.c:450
 hfsplus_unlink+0x214/0x2c0 fs/hfsplus/dir.c:405
 vfs_unlink+0x1f6/0x490 fs/namei.c:4335
 do_unlinkat+0x35b/0x3f0 fs/namei.c:4399
 __do_sys_unlink fs/namei.c:4447 [inline]
 __se_sys_unlink fs/namei.c:4445 [inline]
 __x64_sys_unlink+0x67/0x90 fs/namei.c:4445
 x64_sys_call+0x2004/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:88
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f2453a8f4bb
Code: 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 57 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff04b86088 EFLAGS: 00000206 ORIG_RAX: 0000000000000057
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f2453a8f4bb
RDX: 00007fff04b860b0 RSI: 00007fff04b86140 RDI: 00007fff04b86140
RBP: 00007fff04b86140 R08: 0000000000000000 R09: 00007fff04b85f10
R10: 0000000000000100 R11: 0000000000000206 R12: 00007f2453af0278
R13: 00007fff04b87240 R14: 00005555773e59b0 R15: 00007fff04b88310
 </TASK>
