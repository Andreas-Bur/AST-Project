======================================================
WARNING: possible circular locking dependency detected
6.9.0-rc4 #2 Not tainted
------------------------------------------------------
syz-executor.5/19768 is trying to acquire lock:
ffff8880333340b0 (&tree->tree_lock){+.+.}-{3:3}, at: hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595

but task is already holding lock:
ffff8880302b6f88 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}, at: hfsplus_file_truncate+0x96/0x380 fs/hfsplus/extents.c:576

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfsplus_file_extend+0x83/0x590 fs/hfsplus/extents.c:457
       hfsplus_bmap_reserve+0xd5/0x110 fs/hfsplus/btree.c:358
       hfsplus_rename_cat+0xd5/0x5f0 fs/hfsplus/catalog.c:456
       hfsplus_rename+0xb7/0x120 fs/hfsplus/dir.c:552
       vfs_rename+0x104a/0x14b0 fs/namei.c:4880
       do_renameat2+0x877/0x8d0 fs/namei.c:5037
       __do_sys_renameat2 fs/namei.c:5071 [inline]
       __se_sys_renameat2 fs/namei.c:5068 [inline]
       __x64_sys_renameat2+0x62/0x80 fs/namei.c:5068
       x64_sys_call+0x1945/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:317
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&tree->tree_lock){+.+.}-{3:3}:
       check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain kernel/locking/lockdep.c:3869 [inline]
       __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
       mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
       hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595
       hfsplus_delete_inode+0xd2/0x100 fs/hfsplus/inode.c:450
       hfsplus_file_release+0xe4/0xf0 fs/hfsplus/inode.c:238
       __fput+0x135/0x540 fs/file_table.c:422
       ____fput+0x1a/0x30 fs/file_table.c:450
       task_work_run+0xa1/0x110 kernel/task_work.c:180
       exit_task_work include/linux/task_work.h:38 [inline]
       do_exit+0x537/0x1360 kernel/exit.c:878
       do_group_exit+0x5a/0xf0 kernel/exit.c:1027
       get_signal+0x1318/0x1350 kernel/signal.c:2911
       arch_do_signal_or_restart+0x26/0x470 arch/x86/kernel/signal.c:310
       exit_to_user_mode_loop kernel/entry/common.c:111 [inline]
       exit_to_user_mode_prepare include/linux/entry-common.h:328 [inline]
       __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
       syscall_exit_to_user_mode+0x128/0x210 kernel/entry/common.c:218
       do_syscall_64+0xd0/0x200 arch/x86/entry/common.c:89
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&HFSPLUS_I(inode)->extents_lock);
                               lock(&tree->tree_lock);
                               lock(&HFSPLUS_I(inode)->extents_lock);
  lock(&tree->tree_lock);

 *** DEADLOCK ***

2 locks held by syz-executor.5/19768:
 #0: ffff8880302b7180 (&sb->s_type->i_mutex_key#38){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:795 [inline]
 #0: ffff8880302b7180 (&sb->s_type->i_mutex_key#38){+.+.}-{3:3}, at: hfsplus_file_release+0x82/0xf0 fs/hfsplus/inode.c:233
 #1: ffff8880302b6f88 (&HFSPLUS_I(inode)->extents_lock){+.+.}-{3:3}, at: hfsplus_file_truncate+0x96/0x380 fs/hfsplus/extents.c:576

stack backtrace:
CPU: 1 PID: 19768 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_circular_bug+0x2d5/0x430 kernel/locking/lockdep.c:2060
 check_noncircular+0x10e/0x120 kernel/locking/lockdep.c:2187
 check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __mutex_lock_common kernel/locking/mutex.c:608 [inline]
 __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
 mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
 hfsplus_file_truncate+0x366/0x380 fs/hfsplus/extents.c:595
 hfsplus_delete_inode+0xd2/0x100 fs/hfsplus/inode.c:450
 hfsplus_file_release+0xe4/0xf0 fs/hfsplus/inode.c:238
 __fput+0x135/0x540 fs/file_table.c:422
 ____fput+0x1a/0x30 fs/file_table.c:450
 task_work_run+0xa1/0x110 kernel/task_work.c:180
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0x537/0x1360 kernel/exit.c:878
 do_group_exit+0x5a/0xf0 kernel/exit.c:1027
 get_signal+0x1318/0x1350 kernel/signal.c:2911
 arch_do_signal_or_restart+0x26/0x470 arch/x86/kernel/signal.c:310
 exit_to_user_mode_loop kernel/entry/common.c:111 [inline]
 exit_to_user_mode_prepare include/linux/entry-common.h:328 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
 syscall_exit_to_user_mode+0x128/0x210 kernel/entry/common.c:218
 do_syscall_64+0xd0/0x200 arch/x86/entry/common.c:89
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fdefae8fd6d
Code: Unable to access opcode bytes at 0x7fdefae8fd43.
RSP: 002b:00007fdefbbf40f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000ca
RAX: fffffffffffffe00 RBX: 00007fdefafcbf88 RCX: 00007fdefae8fd6d
RDX: 0000000000000000 RSI: 0000000000000080 RDI: 00007fdefafcbf88
RBP: 00007fdefafcbf80 R08: 00007fdefbbf4640 R09: 00007fdefbbf4640
R10: 0000000000000000 R11: 0000000000000246 R12: 00007fdefafcbf8c
R13: 000000000000000b R14: 00007fdefae4f680 R15: 00007fdefbbd4000
 </TASK>
