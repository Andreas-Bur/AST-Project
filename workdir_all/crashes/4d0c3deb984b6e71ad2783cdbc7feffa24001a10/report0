================================
WARNING: inconsistent lock state
6.9.0-rc4 #2 Not tainted
--------------------------------
inconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-W} usage.
syz-executor.4/20451 [HC1[1]:SC0[0]:HE0:SE1] takes:
ffffffff86791a98 (sync_timeline_list_lock){?.+.}-{2:2}, at: sync_timeline_debug_remove+0x25/0xb0 drivers/dma-buf/sync_debug.c:31
{HARDIRQ-ON-W} state was registered at:
  __trace_hardirqs_on_caller kernel/locking/lockdep.c:4292 [inline]
  lockdep_hardirqs_on_prepare kernel/locking/lockdep.c:4359 [inline]
  lockdep_hardirqs_on_prepare+0xaf/0x1a0 kernel/locking/lockdep.c:4311
  trace_hardirqs_on+0x58/0xe0 kernel/trace/trace_preemptirq.c:61
  __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:159 [inline]
  _raw_spin_unlock_irq+0x27/0x50 kernel/locking/spinlock.c:202
  spin_unlock_irq include/linux/spinlock.h:401 [inline]
  sync_print_obj drivers/dma-buf/sync_debug.c:118 [inline]
  sync_info_debugfs_show+0xa4/0x150 drivers/dma-buf/sync_debug.c:153
  traverse.part.0+0x57/0x270 fs/seq_file.c:111
  traverse fs/seq_file.c:101 [inline]
  seq_read_iter+0x392/0x760 fs/seq_file.c:195
  seq_read+0x1b9/0x200 fs/seq_file.c:162
  loop_rw_iter+0xee/0x290 io_uring/rw.c:520
  io_iter_do_read io_uring/rw.c:706 [inline]
  io_iter_do_read io_uring/rw.c:699 [inline]
  __io_read+0x927/0xa60 io_uring/rw.c:827
  io_read+0x24/0x80 io_uring/rw.c:918
  io_issue_sqe+0xa1/0x5b0 io_uring/io_uring.c:1897
  io_queue_sqe io_uring/io_uring.c:2111 [inline]
  io_submit_sqe io_uring/io_uring.c:2377 [inline]
  io_submit_sqes+0x414/0xd60 io_uring/io_uring.c:2492
  __do_sys_io_uring_enter+0x4df/0xaa0 io_uring/io_uring.c:3668
  __se_sys_io_uring_enter io_uring/io_uring.c:3603 [inline]
  __x64_sys_io_uring_enter+0x2a/0x40 io_uring/io_uring.c:3603
  x64_sys_call+0x14b9/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:427
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
  entry_SYSCALL_64_after_hwframe+0x77/0x7f
irq event stamp: 7250
hardirqs last  enabled at (7249): [<ffffffff84f342e7>] __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:159 [inline]
hardirqs last  enabled at (7249): [<ffffffff84f342e7>] _raw_spin_unlock_irq+0x27/0x50 kernel/locking/spinlock.c:202
hardirqs last disabled at (7250): [<ffffffff84f117bd>] sysvec_irq_work+0x1d/0xc0 arch/x86/kernel/irq_work.c:17
softirqs last  enabled at (2024): [<ffffffff84f35683>] softirq_handle_end kernel/softirq.c:400 [inline]
softirqs last  enabled at (2024): [<ffffffff84f35683>] __do_softirq+0x313/0x3c8 kernel/softirq.c:583
softirqs last disabled at (2001): [<ffffffff810e02cd>] invoke_softirq kernel/softirq.c:428 [inline]
softirqs last disabled at (2001): [<ffffffff810e02cd>] __irq_exit_rcu kernel/softirq.c:633 [inline]
softirqs last disabled at (2001): [<ffffffff810e02cd>] irq_exit_rcu+0x8d/0xb0 kernel/softirq.c:645

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(sync_timeline_list_lock);
  <Interrupt>
    lock(sync_timeline_list_lock);

 *** DEADLOCK ***

no locks held by syz-executor.4/20451.

stack backtrace:
CPU: 0 PID: 20451 Comm: syz-executor.4 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_usage_bug.part.0+0x22c/0x2d0 kernel/locking/lockdep.c:4001
 print_usage_bug kernel/locking/lockdep.c:3971 [inline]
 valid_state kernel/locking/lockdep.c:4013 [inline]
 mark_lock_irq kernel/locking/lockdep.c:4216 [inline]
 mark_lock+0x689/0x940 kernel/locking/lockdep.c:4678
 mark_usage kernel/locking/lockdep.c:4564 [inline]
 __lock_acquire+0xa04/0x15f0 kernel/locking/lockdep.c:5091
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
 _raw_spin_lock_irqsave+0x3f/0x60 kernel/locking/spinlock.c:162
 sync_timeline_debug_remove+0x25/0xb0 drivers/dma-buf/sync_debug.c:31
 sync_timeline_free drivers/dma-buf/sw_sync.c:125 [inline]
 kref_put include/linux/kref.h:65 [inline]
 sync_timeline_put drivers/dma-buf/sw_sync.c:137 [inline]
 timeline_fence_release+0x13c/0x170 drivers/dma-buf/sw_sync.c:165
 dma_fence_release+0x88/0x280 drivers/dma-buf/dma-fence.c:560
 kref_put include/linux/kref.h:65 [inline]
 dma_fence_put include/linux/dma-fence.h:297 [inline]
 dma_fence_array_release+0x10f/0x170 drivers/dma-buf/dma-fence-array.c:120
 dma_fence_release+0x88/0x280 drivers/dma-buf/dma-fence.c:560
 kref_put include/linux/kref.h:65 [inline]
 dma_fence_put include/linux/dma-fence.h:297 [inline]
 irq_dma_fence_array_work+0xa2/0xd0 drivers/dma-buf/dma-fence-array.c:52
 irq_work_single+0x66/0xf0 kernel/irq_work.c:221
 irq_work_run_list+0x52/0x70 kernel/irq_work.c:252
 irq_work_run+0x21/0x40 kernel/irq_work.c:261
 __sysvec_irq_work+0x53/0x250 arch/x86/kernel/irq_work.c:22
 instr_sysvec_irq_work arch/x86/kernel/irq_work.c:17 [inline]
 sysvec_irq_work+0xaf/0xc0 arch/x86/kernel/irq_work.c:17
 </IRQ>
 <TASK>
 asm_sysvec_irq_work+0x1f/0x30 arch/x86/include/asm/idtentry.h:738
RIP: 0010:__raw_spin_unlock_irq include/linux/spinlock_api_smp.h:160 [inline]
RIP: 0010:_raw_spin_unlock_irq+0x2f/0x50 kernel/locking/spinlock.c:202
Code: 48 89 e5 41 54 49 89 fc 48 83 c7 18 48 8b 75 08 e8 66 5e 25 fc 4c 89 e7 e8 de 8f 25 fc e8 f9 a0 39 fc fb 65 ff 0d 99 cf 0f 7b <74> 0a 4c 8b 65 f8 c9 e9 10 fe 1c 00 0f 1f 44 00 00 4c 8b 65 f8 c9
RSP: 0018:ffff88804d137e30 EFLAGS: 00000286
RAX: 0000000000001c51 RBX: 00000000ffffffff RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffff84f342e7
RBP: ffff88804d137e38 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffff88801458dc50
R13: ffff88801458dc00 R14: ffff88801458dc00 R15: ffff88801458dc50
 spin_unlock_irq include/linux/spinlock.h:401 [inline]
 sw_sync_debugfs_release+0x9b/0x130 drivers/dma-buf/sw_sync.c:359
 __fput+0x135/0x540 fs/file_table.c:422
 __fput_sync+0x44/0x60 fs/file_table.c:507
 __do_sys_close fs/open.c:1556 [inline]
 __se_sys_close fs/open.c:1541 [inline]
 __x64_sys_close+0x4d/0xd0 fs/open.c:1541
 x64_sys_call+0x18e2/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:4
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f6070a8ec4b
Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 83 fd 02 00 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 44 89 c7 89 44 24 0c e8 d1 fd 02 00 8b 44
RSP: 002b:00007fff2f395410 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f6070a8ec4b
RDX: 0000000000000000 RSI: 0000000000013ca7 RDI: 0000000000000005
RBP: 00007f6070bcd980 R08: 0000000000000000 R09: 00000000812cdff0
R10: 0000000000000001 R11: 0000000000000293 R12: 0000000000029642
R13: 0000000000029374 R14: 00007f6070bcc05c R15: 00007fff2f395510
 </TASK>
vkms_vblank_simulate: vblank timer overrun
----------------
Code disassembly (best guess):
   0:	48 89 e5             	mov    %rsp,%rbp
   3:	41 54                	push   %r12
   5:	49 89 fc             	mov    %rdi,%r12
   8:	48 83 c7 18          	add    $0x18,%rdi
   c:	48 8b 75 08          	mov    0x8(%rbp),%rsi
  10:	e8 66 5e 25 fc       	call   0xfc255e7b
  15:	4c 89 e7             	mov    %r12,%rdi
  18:	e8 de 8f 25 fc       	call   0xfc258ffb
  1d:	e8 f9 a0 39 fc       	call   0xfc39a11b
  22:	fb                   	sti
  23:	65 ff 0d 99 cf 0f 7b 	decl   %gs:0x7b0fcf99(%rip)        # 0x7b0fcfc3
* 2a:	74 0a                	je     0x36 <-- trapping instruction
  2c:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
  30:	c9                   	leave
  31:	e9 10 fe 1c 00       	jmp    0x1cfe46
  36:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  3b:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
  3f:	c9                   	leave
