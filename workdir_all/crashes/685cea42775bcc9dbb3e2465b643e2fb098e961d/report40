BUG: MAX_STACK_TRACE_ENTRIES too low!
turning off the locking correctness validator.
CPU: 0 PID: 70565 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 save_trace+0x2c5/0x3a0 kernel/locking/lockdep.c:578
 check_prev_add+0x72b/0x9e0 kernel/locking/lockdep.c:3195
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 _raw_spin_lock_nested+0x2d/0x40 kernel/locking/spinlock.c:378
 raw_spin_rq_lock_nested+0x22/0xa0 kernel/sched/core.c:559
 raw_spin_rq_lock kernel/sched/sched.h:1385 [inline]
 rq_lock kernel/sched/sched.h:1699 [inline]
 __schedule+0xb5/0x17d0 kernel/sched/core.c:6654
 __schedule_loop kernel/sched/core.c:6823 [inline]
 schedule+0x4b/0x170 kernel/sched/core.c:6838
 io_schedule+0x44/0x70 kernel/sched/core.c:9044
 bit_wait_io+0x10/0x70 kernel/sched/wait_bit.c:209
 __wait_on_bit+0x33/0xa0 kernel/sched/wait_bit.c:49
 out_of_line_wait_on_bit+0x7f/0x90 kernel/sched/wait_bit.c:64
 wait_on_bit_io include/linux/wait_bit.h:101 [inline]
 __wait_on_buffer fs/buffer.c:123 [inline]
 wait_on_buffer include/linux/buffer_head.h:389 [inline]
 __bread_slow fs/buffer.c:1268 [inline]
 __bread_gfp+0x23b/0x260 fs/buffer.c:1477
 sb_bread include/linux/buffer_head.h:321 [inline]
 vxfs_try_sb_magic+0x43/0x1b0 fs/freevxfs/vxfs_super.c:134
 vxfs_fill_super+0xaf/0x410 fs/freevxfs/vxfs_super.c:213
 mount_bdev+0x130/0x1a0 fs/super.c:1658
 vxfs_mount+0x39/0x50 fs/freevxfs/vxfs_super.c:290
 legacy_get_tree+0x3f/0xb0 fs/fs_context.c:662
 vfs_get_tree+0x3a/0x160 fs/super.c:1779
 do_new_mount fs/namespace.c:3352 [inline]
 path_mount+0xcb0/0x11d0 fs/namespace.c:3679
 do_mount fs/namespace.c:3692 [inline]
 __do_sys_mount fs/namespace.c:3898 [inline]
 __se_sys_mount fs/namespace.c:3875 [inline]
 __x64_sys_mount+0x17b/0x1c0 fs/namespace.c:3875
 x64_sys_call+0x2072/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:166
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fc417a91b3e
Code: 48 c7 c0 ff ff ff ff eb aa e8 be 0d 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 f3 0f 1e fa 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fc4187e7e38 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 0000000000009dc3 RCX: 00007fc417a91b3e
RDX: 0000000020009e00 RSI: 0000000020009e40 RDI: 00007fc4187e7e90
RBP: 00007fc4187e7ed0 R08: 00007fc4187e7ed0 R09: 000000000080c050
R10: 000000000080c050 R11: 0000000000000202 R12: 0000000020009e00
R13: 0000000020009e40 R14: 00007fc4187e7e90 R15: 0000000020000080
 </TASK>
