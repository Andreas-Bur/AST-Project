BUG: MAX_STACK_TRACE_ENTRIES too low!
turning off the locking correctness validator.
CPU: 0 PID: 65945 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 save_trace+0x2c5/0x3a0 kernel/locking/lockdep.c:578
 check_prev_add+0x72b/0x9e0 kernel/locking/lockdep.c:3195
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 reacquire_held_locks+0xd6/0x1f0 kernel/locking/lockdep.c:5279
 __lock_release kernel/locking/lockdep.c:5468 [inline]
 lock_release+0x103/0x260 kernel/locking/lockdep.c:5774
 up_write+0x1a/0x1c0 kernel/locking/rwsem.c:1631
 btrfs_tree_unlock+0x25/0x30 fs/btrfs/locking.c:226
 btrfs_force_cow_block+0x69d/0xb40 fs/btrfs/ctree.c:658
 btrfs_cow_block+0x137/0x460 fs/btrfs/ctree.c:749
 btrfs_search_slot+0x9b0/0x15d0 fs/btrfs/ctree.c:2104
 log_inode_item fs/btrfs/tree-log.c:4248 [inline]
 btrfs_log_inode+0x206b/0x2270 fs/btrfs/tree-log.c:6607
 btrfs_log_inode_parent+0x3af/0x1380 fs/btrfs/tree-log.c:7070
 btrfs_log_dentry_safe+0x43/0x60 fs/btrfs/tree-log.c:7171
 btrfs_sync_file+0x469/0x7e0 fs/btrfs/file.c:1933
 vfs_fsync_range+0x67/0x100 fs/sync.c:188
 generic_write_sync include/linux/fs.h:2795 [inline]
 btrfs_do_write_iter+0x19b/0x980 fs/btrfs/file.c:1695
 btrfs_file_write_iter+0x24/0x30 fs/btrfs/file.c:1705
 call_write_iter include/linux/fs.h:2110 [inline]
 iter_file_splice_write+0x5d7/0x8a0 fs/splice.c:743
 do_splice_from fs/splice.c:941 [inline]
 direct_splice_actor+0x93/0x3b0 fs/splice.c:1164
 splice_direct_to_actor+0x15a/0x3f0 fs/splice.c:1108
 do_splice_direct_actor fs/splice.c:1207 [inline]
 do_splice_direct+0xb2/0x100 fs/splice.c:1233
 do_sendfile+0x535/0x630 fs/read_write.c:1295
 __do_sys_sendfile64 fs/read_write.c:1362 [inline]
 __se_sys_sendfile64 fs/read_write.c:1348 [inline]
 __x64_sys_sendfile64+0xea/0x100 fs/read_write.c:1348
 x64_sys_call+0x1d4f/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:41
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fe7a648fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fe7a72db028 EFLAGS: 00000246 ORIG_RAX: 0000000000000028
RAX: ffffffffffffffda RBX: 00007fe7a65cbf80 RCX: 00007fe7a648fd6d
RDX: 0000000000000000 RSI: 0000000000000005 RDI: 0000000000000005
RBP: 00007fe7a64f14cd R08: 0000000000000000 R09: 0000000000000000
R10: 000007fffffff800 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000004d R14: 00007fe7a65cbf80 R15: 00007fe7a72bb000
 </TASK>
