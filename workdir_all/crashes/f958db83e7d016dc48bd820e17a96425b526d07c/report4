ERROR: (device loop5): remounting filesystem as read-only
jfs_dirty_inode called on read-only volume
Is remount racy?
jfs_dirty_inode called on read-only volume
Is remount racy?
INFO: trying to register non-static key.
The code is fine but needs lockdep annotation, or maybe
you didn't initialize this object before use?
turning off the locking correctness validator.
CPU: 0 PID: 47760 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 assign_lock_key kernel/locking/lockdep.c:976 [inline]
 register_lock_class+0x55a/0x590 kernel/locking/lockdep.c:1289
 __lock_acquire+0x5f/0x15f0 kernel/locking/lockdep.c:5014
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
 _raw_spin_lock_irqsave+0x3f/0x60 kernel/locking/spinlock.c:162
 __wake_up_common_lock kernel/sched/wait.c:105 [inline]
 __wake_up+0x21/0x60 kernel/sched/wait.c:127
 txEnd+0x6a/0x2d0 fs/jfs/jfs_txnmgr.c:504
 jfs_unlink+0x28f/0x590 fs/jfs/namei.c:558
 vfs_unlink+0x1f6/0x490 fs/namei.c:4335
 do_unlinkat+0x35b/0x3f0 fs/namei.c:4399
 __do_sys_unlink fs/namei.c:4447 [inline]
 __se_sys_unlink fs/namei.c:4445 [inline]
 __x64_sys_unlink+0x67/0x90 fs/namei.c:4445
 x64_sys_call+0x2004/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:88
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f74c948f4bb
Code: 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 57 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff0d6b0d28 EFLAGS: 00000206 ORIG_RAX: 0000000000000057
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f74c948f4bb
RDX: 00007fff0d6b0d50 RSI: 00007fff0d6b0de0 RDI: 00007fff0d6b0de0
RBP: 00007fff0d6b0de0 R08: 0000000000000000 R09: 00007fff0d6b0bb0
R10: 0000000000000100 R11: 0000000000000206 R12: 00007f74c94f0278
R13: 00007fff0d6b1ee0 R14: 00005555737eb9b0 R15: 00007fff0d6b2fb0
 </TASK>
BUG: kernel NULL pointer dereference, address: 0000000000000000
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 491f4067 P4D 491f4067 PUD 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 0 PID: 47760 Comm: syz-executor.5 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:__wake_up_common+0x3f/0xc0 kernel/sched/wait.c:85
Code: 53 48 89 fb 48 83 ec 10 8b 05 65 dd 84 05 89 55 cc 85 c0 75 73 48 8b 43 40 48 8d 73 40 48 89 75 d0 48 8d 78 e8 48 39 c6 74 48 <4c> 8b 00 49 8d 58 e8 eb 26 74 0c 41 83 e4 01 74 06 83 6d cc 01 74
RSP: 0018:ffff888043fcfd08 EFLAGS: 00010082
RAX: 0000000000000000 RBX: ffffc90000640030 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffffc90000640070 RDI: ffffffffffffffe8
RBP: ffff888043fcfd40 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffffc90000640030
R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000
FS:  00005555737e2480(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 000000004821a004 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 __wake_up_common_lock kernel/sched/wait.c:106 [inline]
 __wake_up+0x36/0x60 kernel/sched/wait.c:127
 txEnd+0x6a/0x2d0 fs/jfs/jfs_txnmgr.c:504
 jfs_unlink+0x28f/0x590 fs/jfs/namei.c:558
 vfs_unlink+0x1f6/0x490 fs/namei.c:4335
 do_unlinkat+0x35b/0x3f0 fs/namei.c:4399
 __do_sys_unlink fs/namei.c:4447 [inline]
 __se_sys_unlink fs/namei.c:4445 [inline]
 __x64_sys_unlink+0x67/0x90 fs/namei.c:4445
 x64_sys_call+0x2004/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:88
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f74c948f4bb
Code: 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 57 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff0d6b0d28 EFLAGS: 00000206 ORIG_RAX: 0000000000000057
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f74c948f4bb
RDX: 00007fff0d6b0d50 RSI: 00007fff0d6b0de0 RDI: 00007fff0d6b0de0
RBP: 00007fff0d6b0de0 R08: 0000000000000000 R09: 00007fff0d6b0bb0
R10: 0000000000000100 R11: 0000000000000206 R12: 00007f74c94f0278
R13: 00007fff0d6b1ee0 R14: 00005555737eb9b0 R15: 00007fff0d6b2fb0
 </TASK>
Modules linked in:
CR2: 0000000000000000
---[ end trace 0000000000000000 ]---
RIP: 0010:__wake_up_common+0x3f/0xc0 kernel/sched/wait.c:85
Code: 53 48 89 fb 48 83 ec 10 8b 05 65 dd 84 05 89 55 cc 85 c0 75 73 48 8b 43 40 48 8d 73 40 48 89 75 d0 48 8d 78 e8 48 39 c6 74 48 <4c> 8b 00 49 8d 58 e8 eb 26 74 0c 41 83 e4 01 74 06 83 6d cc 01 74
RSP: 0018:ffff888043fcfd08 EFLAGS: 00010082
RAX: 0000000000000000 RBX: ffffc90000640030 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffffc90000640070 RDI: ffffffffffffffe8
RBP: ffff888043fcfd40 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffffc90000640030
R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000
FS:  00005555737e2480(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 000000004821a004 CR4: 0000000000770ef0
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	53                   	push   %rbx
   1:	48 89 fb             	mov    %rdi,%rbx
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	8b 05 65 dd 84 05    	mov    0x584dd65(%rip),%eax        # 0x584dd73
   e:	89 55 cc             	mov    %edx,-0x34(%rbp)
  11:	85 c0                	test   %eax,%eax
  13:	75 73                	jne    0x88
  15:	48 8b 43 40          	mov    0x40(%rbx),%rax
  19:	48 8d 73 40          	lea    0x40(%rbx),%rsi
  1d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  21:	48 8d 78 e8          	lea    -0x18(%rax),%rdi
  25:	48 39 c6             	cmp    %rax,%rsi
  28:	74 48                	je     0x72
* 2a:	4c 8b 00             	mov    (%rax),%r8 <-- trapping instruction
  2d:	49 8d 58 e8          	lea    -0x18(%r8),%rbx
  31:	eb 26                	jmp    0x59
  33:	74 0c                	je     0x41
  35:	41 83 e4 01          	and    $0x1,%r12d
  39:	74 06                	je     0x41
  3b:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
  3f:	74                   	.byte 0x74
