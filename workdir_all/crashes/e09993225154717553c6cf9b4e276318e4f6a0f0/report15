======================================================
WARNING: possible circular locking dependency detected
6.9.0-rc4 #2 Not tainted
------------------------------------------------------
syz-executor.7/34381 is trying to acquire lock:
ffff888028d281a0 (&mm->mmap_lock){++++}-{3:3}, at: __might_fault mm/memory.c:6220 [inline]
ffff888028d281a0 (&mm->mmap_lock){++++}-{3:3}, at: __might_fault+0x8d/0xc0 mm/memory.c:6213

but task is already holding lock:
ffff88800d6b9668 (&ni->file.run_lock){++++}-{3:3}, at: ni_fiemap+0x182/0x760 fs/ntfs3/frecord.c:1961

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (&ni->file.run_lock){++++}-{3:3}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       down_read+0x40/0x170 kernel/locking/rwsem.c:1526
       attr_data_get_block+0x6f/0xfb0 fs/ntfs3/attrib.c:902
       ntfs_get_block_vbo+0xde/0x6a0 fs/ntfs3/inode.c:587
       ntfs_get_block+0x40/0x50 fs/ntfs3/inode.c:682
       do_mpage_readpage+0x279/0x970 fs/mpage.c:232
       mpage_read_folio+0x4f/0xa0 fs/mpage.c:399
       ntfs_read_folio+0xdd/0x140 fs/ntfs3/inode.c:725
       filemap_read_folio+0x51/0x140 mm/filemap.c:2331
       do_read_cache_folio+0x18c/0x2f0 mm/filemap.c:3747
       do_read_cache_page mm/filemap.c:3813 [inline]
       read_cache_page+0x3b/0xb0 mm/filemap.c:3822
       read_mapping_page include/linux/pagemap.h:888 [inline]
       __copy_insn kernel/events/uprobes.c:794 [inline]
       copy_insn kernel/events/uprobes.c:820 [inline]
       prepare_uprobe kernel/events/uprobes.c:845 [inline]
       install_breakpoint.isra.0+0x1b2/0x550 kernel/events/uprobes.c:896
       register_for_each_vma+0x596/0x6d0 kernel/events/uprobes.c:1064
       uprobe_apply+0xb2/0x100 kernel/events/uprobes.c:1225
       uprobe_perf_open kernel/trace/trace_uprobe.c:1309 [inline]
       trace_uprobe_register+0x269/0x3a0 kernel/trace/trace_uprobe.c:1462
       perf_trace_event_open kernel/trace/trace_event_perf.c:184 [inline]
       perf_trace_event_init kernel/trace/trace_event_perf.c:206 [inline]
       perf_trace_event_init+0xa1/0x540 kernel/trace/trace_event_perf.c:193
       perf_uprobe_init+0x107/0x180 kernel/trace/trace_event_perf.c:332
       perf_uprobe_event_init+0x9a/0x120 kernel/events/core.c:10399
       perf_try_init_event+0x85/0x280 kernel/events/core.c:11668
       perf_init_event kernel/events/core.c:11738 [inline]
       perf_event_alloc.part.0+0x621/0x1bf0 kernel/events/core.c:12018
       perf_event_alloc kernel/events/core.c:12427 [inline]
       __do_sys_perf_event_open+0x3e2/0x1c30 kernel/events/core.c:12525
       __se_sys_perf_event_open kernel/events/core.c:12416 [inline]
       __x64_sys_perf_event_open+0x27/0x40 kernel/events/core.c:12416
       x64_sys_call+0x15ea/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:299
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #1 (&uprobe->consumer_rwsem){++++}-{3:3}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       down_write+0x3f/0xd0 kernel/locking/rwsem.c:1579
       prepare_uprobe kernel/events/uprobes.c:841 [inline]
       install_breakpoint.isra.0+0x12d/0x550 kernel/events/uprobes.c:896
       register_for_each_vma+0x596/0x6d0 kernel/events/uprobes.c:1064
       uprobe_apply+0xb2/0x100 kernel/events/uprobes.c:1225
       uprobe_perf_open kernel/trace/trace_uprobe.c:1309 [inline]
       trace_uprobe_register+0x269/0x3a0 kernel/trace/trace_uprobe.c:1462
       perf_trace_event_open kernel/trace/trace_event_perf.c:184 [inline]
       perf_trace_event_init kernel/trace/trace_event_perf.c:206 [inline]
       perf_trace_event_init+0xa1/0x540 kernel/trace/trace_event_perf.c:193
       perf_uprobe_init+0x107/0x180 kernel/trace/trace_event_perf.c:332
       perf_uprobe_event_init+0x9a/0x120 kernel/events/core.c:10399
       perf_try_init_event+0x85/0x280 kernel/events/core.c:11668
       perf_init_event kernel/events/core.c:11738 [inline]
       perf_event_alloc.part.0+0x621/0x1bf0 kernel/events/core.c:12018
       perf_event_alloc kernel/events/core.c:12427 [inline]
       __do_sys_perf_event_open+0x3e2/0x1c30 kernel/events/core.c:12525
       __se_sys_perf_event_open kernel/events/core.c:12416 [inline]
       __x64_sys_perf_event_open+0x27/0x40 kernel/events/core.c:12416
       x64_sys_call+0x15ea/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:299
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&mm->mmap_lock){++++}-{3:3}:
       check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain kernel/locking/lockdep.c:3869 [inline]
       __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __might_fault mm/memory.c:6220 [inline]
       __might_fault+0x9b/0xc0 mm/memory.c:6213
       _copy_to_user+0x30/0xc0 lib/usercopy.c:36
       copy_to_user include/linux/uaccess.h:191 [inline]
       fiemap_fill_next_extent+0x12c/0x1c0 fs/ioctl.c:145
       ni_fiemap+0x58d/0x760 fs/ntfs3/frecord.c:2044
       ntfs_fiemap+0x81/0xb0 fs/ntfs3/file.c:1206
       ioctl_fiemap fs/ioctl.c:220 [inline]
       do_vfs_ioctl+0x214/0xdd0 fs/ioctl.c:838
       __do_sys_ioctl fs/ioctl.c:902 [inline]
       __se_sys_ioctl fs/ioctl.c:890 [inline]
       __x64_sys_ioctl+0xc2/0x160 fs/ioctl.c:890
       x64_sys_call+0x1205/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:17
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

other info that might help us debug this:

Chain exists of:
  &mm->mmap_lock --> &uprobe->consumer_rwsem --> &ni->file.run_lock

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  rlock(&ni->file.run_lock);
                               lock(&uprobe->consumer_rwsem);
                               lock(&ni->file.run_lock);
  rlock(&mm->mmap_lock);

 *** DEADLOCK ***

2 locks held by syz-executor.7/34381:
 #0: ffff88800d6b95b8 (&ni->ni_lock/4){+.+.}-{3:3}, at: ni_lock fs/ntfs3/ntfs_fs.h:1121 [inline]
 #0: ffff88800d6b95b8 (&ni->ni_lock/4){+.+.}-{3:3}, at: ntfs_fiemap+0x6f/0xb0 fs/ntfs3/file.c:1204
 #1: ffff88800d6b9668 (&ni->file.run_lock){++++}-{3:3}, at: ni_fiemap+0x182/0x760 fs/ntfs3/frecord.c:1961

stack backtrace:
CPU: 0 PID: 34381 Comm: syz-executor.7 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_circular_bug+0x2d5/0x430 kernel/locking/lockdep.c:2060
 check_noncircular+0x10e/0x120 kernel/locking/lockdep.c:2187
 check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __might_fault mm/memory.c:6220 [inline]
 __might_fault+0x9b/0xc0 mm/memory.c:6213
 _copy_to_user+0x30/0xc0 lib/usercopy.c:36
 copy_to_user include/linux/uaccess.h:191 [inline]
 fiemap_fill_next_extent+0x12c/0x1c0 fs/ioctl.c:145
 ni_fiemap+0x58d/0x760 fs/ntfs3/frecord.c:2044
 ntfs_fiemap+0x81/0xb0 fs/ntfs3/file.c:1206
 ioctl_fiemap fs/ioctl.c:220 [inline]
 do_vfs_ioctl+0x214/0xdd0 fs/ioctl.c:838
 __do_sys_ioctl fs/ioctl.c:902 [inline]
 __se_sys_ioctl fs/ioctl.c:890 [inline]
 __x64_sys_ioctl+0xc2/0x160 fs/ioctl.c:890
 x64_sys_call+0x1205/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:17
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f2523c8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f25237ff028 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007f2523dcbf80 RCX: 00007f2523c8fd6d
RDX: 00000000200001c0 RSI: 00000000c020660b RDI: 0000000000000007
RBP: 00007f2523cf14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007f2523dcbf80 R15: 00007f25237df000
 </TASK>
