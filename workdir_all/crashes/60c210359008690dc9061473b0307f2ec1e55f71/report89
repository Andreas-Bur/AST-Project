BUG: MAX_LOCKDEP_ENTRIES too low!
turning off the locking correctness validator.
CPU: 0 PID: 16517 Comm: syz-executor.6 Not tainted 6.9.0-rc4 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 alloc_list_entry kernel/locking/lockdep.c:1397 [inline]
 add_lock_to_list+0x17a/0x200 kernel/locking/lockdep.c:1418
 check_prev_add+0x28e/0x9e0 kernel/locking/lockdep.c:3204
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 __mutex_lock_common kernel/locking/mutex.c:608 [inline]
 __mutex_lock+0x82/0x450 kernel/locking/mutex.c:752
 mutex_lock_nested+0x1a/0x20 kernel/locking/mutex.c:804
 tracepoint_probe_register_prio kernel/tracepoint.c:507 [inline]
 tracepoint_probe_register+0x2d/0x80 kernel/tracepoint.c:531
 register_trace_sched_wakeup include/trace/events/sched.h:178 [inline]
 tracing_sched_register kernel/trace/trace_sched_switch.c:56 [inline]
 tracing_start_sched_switch+0x9e/0x1f0 kernel/trace/trace_sched_switch.c:110
 tracing_start_cmdline_record+0x17/0x20 kernel/trace/trace_sched_switch.c:135
 __ftrace_event_enable_disable+0x3f3/0x430 kernel/trace/trace_events.c:690
 ftrace_event_enable_disable kernel/trace/trace_events.c:730 [inline]
 __ftrace_set_clr_event_nolock+0x1b5/0x230 kernel/trace/trace_events.c:1059
 __ftrace_set_clr_event kernel/trace/trace_events.c:1081 [inline]
 trace_set_clr_event+0x87/0xc0 kernel/trace/trace_events.c:1146
 __set_printk_clr_event kernel/trace/bpf_trace.c:417 [inline]
 bpf_get_trace_printk_proto+0x26/0x90 kernel/trace/bpf_trace.c:423
 bpf_base_func_proto+0x780/0x860 kernel/bpf/helpers.c:1800
 bpf_sk_base_func_proto+0x12d/0x140 net/core/filter.c:11816
 tc_cls_act_func_proto+0x54c/0x560 net/core/filter.c:8196
 check_helper_call.isra.0+0xca/0x53a0 kernel/bpf/verifier.c:10202
 do_check kernel/bpf/verifier.c:17813 [inline]
 do_check_common+0x38f8/0x48b0 kernel/bpf/verifier.c:20516
 do_check_main kernel/bpf/verifier.c:20607 [inline]
 bpf_check+0x2de8/0x4f40 kernel/bpf/verifier.c:21277
 bpf_prog_load+0xb6b/0x13f0 kernel/bpf/syscall.c:2895
 __sys_bpf+0x101c/0x4100 kernel/bpf/syscall.c:5660
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0x22/0x30 kernel/bpf/syscall.c:5765
 x64_sys_call+0x1b97/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7febebc8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007febeca50028 EFLAGS: 00000246 ORIG_RAX: 0000000000000141
RAX: ffffffffffffffda RBX: 00007febebdcbf80 RCX: 00007febebc8fd6d
RDX: 0000000000000090 RSI: 00000000200000c0 RDI: 0000000000000005
RBP: 00007febebcf14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007febebdcbf80 R15: 00007febeca30000
 </TASK>
