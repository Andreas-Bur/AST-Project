================================
WARNING: inconsistent lock state
6.9.0-rc4 #2 Not tainted
--------------------------------
inconsistent {IN-HARDIRQ-W} -> {HARDIRQ-ON-W} usage.
syz-executor.0/35592 [HC0[0]:SC0[0]:HE0:SE1] takes:
ffffffff86791a98 (sync_timeline_list_lock){?...}-{2:2}, at: spin_lock_irq include/linux/spinlock.h:376 [inline]
ffffffff86791a98 (sync_timeline_list_lock){?...}-{2:2}, at: sync_info_debugfs_show+0x34/0x150 drivers/dma-buf/sync_debug.c:147
{IN-HARDIRQ-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5754 [inline]
  lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
  __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
  _raw_spin_lock_irqsave+0x3f/0x60 kernel/locking/spinlock.c:162
  sync_timeline_debug_remove+0x25/0xb0 drivers/dma-buf/sync_debug.c:31
  sync_timeline_free drivers/dma-buf/sw_sync.c:125 [inline]
  kref_put include/linux/kref.h:65 [inline]
  sync_timeline_put drivers/dma-buf/sw_sync.c:137 [inline]
  timeline_fence_release+0x13c/0x170 drivers/dma-buf/sw_sync.c:165
  dma_fence_release+0x88/0x280 drivers/dma-buf/dma-fence.c:560
  kref_put include/linux/kref.h:65 [inline]
  dma_fence_put include/linux/dma-fence.h:297 [inline]
  dma_fence_array_release+0x10f/0x170 drivers/dma-buf/dma-fence-array.c:120
  dma_fence_release+0x88/0x280 drivers/dma-buf/dma-fence.c:560
  kref_put include/linux/kref.h:65 [inline]
  dma_fence_put include/linux/dma-fence.h:297 [inline]
  irq_dma_fence_array_work+0xa2/0xd0 drivers/dma-buf/dma-fence-array.c:52
  irq_work_single+0x66/0xf0 kernel/irq_work.c:221
  irq_work_run_list+0x52/0x70 kernel/irq_work.c:252
  irq_work_run+0x21/0x40 kernel/irq_work.c:261
  __sysvec_irq_work+0x53/0x250 arch/x86/kernel/irq_work.c:22
  instr_sysvec_irq_work arch/x86/kernel/irq_work.c:17 [inline]
  sysvec_irq_work+0xaf/0xc0 arch/x86/kernel/irq_work.c:17
  asm_sysvec_irq_work+0x1f/0x30 arch/x86/include/asm/idtentry.h:738
  __preempt_count_dec_and_test arch/x86/include/asm/preempt.h:94 [inline]
  __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:160 [inline]
  _raw_spin_unlock_irq+0x2f/0x50 kernel/locking/spinlock.c:202
  spin_unlock_irq include/linux/spinlock.h:401 [inline]
  sw_sync_debugfs_release+0x9b/0x130 drivers/dma-buf/sw_sync.c:359
  __fput+0x135/0x540 fs/file_table.c:422
  ____fput+0x1a/0x30 fs/file_table.c:450
  task_work_run+0xa1/0x110 kernel/task_work.c:180
  exit_task_work include/linux/task_work.h:38 [inline]
  do_exit+0x537/0x1360 kernel/exit.c:878
  do_group_exit+0x5a/0xf0 kernel/exit.c:1027
  get_signal+0x1318/0x1350 kernel/signal.c:2911
  arch_do_signal_or_restart+0x26/0x470 arch/x86/kernel/signal.c:310
  exit_to_user_mode_loop kernel/entry/common.c:111 [inline]
  exit_to_user_mode_prepare include/linux/entry-common.h:328 [inline]
  __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]
  syscall_exit_to_user_mode+0x128/0x210 kernel/entry/common.c:218
  do_syscall_64+0xd0/0x200 arch/x86/entry/common.c:89
  entry_SYSCALL_64_after_hwframe+0x77/0x7f
irq event stamp: 516
hardirqs last  enabled at (515): [<ffffffff815916bb>] mod_objcg_state+0x10b/0x250 mm/memcontrol.c:3420
hardirqs last disabled at (516): [<ffffffff84f33ff0>] __raw_spin_lock_irq include/linux/spinlock_api_smp.h:117 [inline]
hardirqs last disabled at (516): [<ffffffff84f33ff0>] _raw_spin_lock_irq+0x50/0x60 kernel/locking/spinlock.c:170
softirqs last  enabled at (0): [<ffffffff810cc596>] copy_process+0xd16/0x3aa0 kernel/fork.c:2334
softirqs last disabled at (0): [<0000000000000000>] 0x0

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(sync_timeline_list_lock);
  <Interrupt>
    lock(sync_timeline_list_lock);

 *** DEADLOCK ***

3 locks held by syz-executor.0/35592:
 #0: ffff888027bc90a8 (&ctx->uring_lock){+.+.}-{3:3}, at: __do_sys_io_uring_enter+0x4d4/0xaa0 io_uring/io_uring.c:3667
 #1: ffff88800deeab80 (&p->lock){+.+.}-{3:3}, at: seq_read_iter+0x7a/0x760 fs/seq_file.c:182
 #2: ffffffff86791a98 (sync_timeline_list_lock){?...}-{2:2}, at: spin_lock_irq include/linux/spinlock.h:376 [inline]
 #2: ffffffff86791a98 (sync_timeline_list_lock){?...}-{2:2}, at: sync_info_debugfs_show+0x34/0x150 drivers/dma-buf/sync_debug.c:147

stack backtrace:
CPU: 0 PID: 35592 Comm: syz-executor.0 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_usage_bug.part.0+0x22c/0x2d0 kernel/locking/lockdep.c:4001
 print_usage_bug kernel/locking/lockdep.c:3971 [inline]
 valid_state kernel/locking/lockdep.c:4013 [inline]
 mark_lock_irq kernel/locking/lockdep.c:4216 [inline]
 mark_lock+0x689/0x940 kernel/locking/lockdep.c:4678
 mark_held_locks+0x4d/0x80 kernel/locking/lockdep.c:4274
 __trace_hardirqs_on_caller kernel/locking/lockdep.c:4292 [inline]
 lockdep_hardirqs_on_prepare kernel/locking/lockdep.c:4359 [inline]
 lockdep_hardirqs_on_prepare+0xaf/0x1a0 kernel/locking/lockdep.c:4311
 trace_hardirqs_on+0x58/0xe0 kernel/trace/trace_preemptirq.c:61
 __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:159 [inline]
 _raw_spin_unlock_irq+0x27/0x50 kernel/locking/spinlock.c:202
 spin_unlock_irq include/linux/spinlock.h:401 [inline]
 sync_print_obj drivers/dma-buf/sync_debug.c:118 [inline]
 sync_info_debugfs_show+0xa4/0x150 drivers/dma-buf/sync_debug.c:153
 seq_read_iter+0x1a8/0x760 fs/seq_file.c:230
 seq_read+0x1b9/0x200 fs/seq_file.c:162
 loop_rw_iter+0xee/0x290 io_uring/rw.c:520
 io_iter_do_read io_uring/rw.c:706 [inline]
 io_iter_do_read io_uring/rw.c:699 [inline]
 __io_read+0x927/0xa60 io_uring/rw.c:827
 io_read+0x24/0x80 io_uring/rw.c:918
 io_issue_sqe+0xa1/0x5b0 io_uring/io_uring.c:1897
 io_queue_sqe io_uring/io_uring.c:2111 [inline]
 io_submit_sqe io_uring/io_uring.c:2377 [inline]
 io_submit_sqes+0x414/0xd60 io_uring/io_uring.c:2492
 __do_sys_io_uring_enter+0x4df/0xaa0 io_uring/io_uring.c:3668
 __se_sys_io_uring_enter io_uring/io_uring.c:3603 [inline]
 __x64_sys_io_uring_enter+0x2a/0x40 io_uring/io_uring.c:3603
 x64_sys_call+0x14b9/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:427
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f1a9108fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f1a90bb9028 EFLAGS: 00000246 ORIG_RAX: 00000000000001aa
RAX: ffffffffffffffda RBX: 00007f1a911cc050 RCX: 00007f1a9108fd6d
RDX: 0000000000000000 RSI: 000000000000079e RDI: 000000000000000a
RBP: 00007f1a910f14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000006e R14: 00007f1a911cc050 R15: 00007f1a90b99000
 </TASK>
