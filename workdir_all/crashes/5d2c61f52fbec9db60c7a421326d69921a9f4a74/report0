BUG: unable to handle page fault for address: 000000000001592d
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 293aa067 P4D 293aa067 PUD 280a6067 PMD 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 0 PID: 14943 Comm: syz-executor.6 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:rb_next+0x18/0x50 lib/rbtree.c:505
Code: 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 48 8b 17 48 39 d7 74 3d 48 8b 47 08 48 85 c0 74 20 49 89 c0 <48> 8b 40 10 48 85 c0 75 f4 4c 89 c0 e9 f2 35 21 00 48 3b 78 08 75
RSP: 0018:ffff88807dc05ee0 EFLAGS: 00010006
RAX: 000000000001591d RBX: ffff8880308cbe18 RCX: ffffffff84ef4136
RDX: 000000000001591c RSI: ffffffff84ef414c RDI: ffff8880308cbe18
RBP: ffff88807dc05f00 R08: 000000000001591d R09: 0000000000000001
R10: ffff8880308cbe18 R11: 0000000000000000 R12: ffff88807dc20990
R13: 000000000001591c R14: ffff88807dc208c0 R15: 0000000000000001
FS:  00007f85e591c640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000000001592d CR3: 0000000027d38003 CR4: 0000000000770ef0
DR0: 00000000200000c0 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
PKRU: 55555554
Call Trace:
 <IRQ>
 __remove_hrtimer kernel/time/hrtimer.c:1123 [inline]
 __run_hrtimer kernel/time/hrtimer.c:1672 [inline]
 __hrtimer_run_queues+0x1f0/0x530 kernel/time/hrtimer.c:1756
 hrtimer_interrupt+0x129/0x2c0 kernel/time/hrtimer.c:1818
 local_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1032 [inline]
 __sysvec_apic_timer_interrupt+0x6f/0x1f0 arch/x86/kernel/apic/apic.c:1049
 instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]
 sysvec_apic_timer_interrupt+0x79/0x90 arch/x86/kernel/apic/apic.c:1043
 </IRQ>
 <TASK>
 asm_sysvec_apic_timer_interrupt+0x1f/0x30 arch/x86/include/asm/idtentry.h:702
RIP: 0010:lock_acquire+0xcf/0x2c0 kernel/locking/lockdep.c:5758
Code: 53 e8 e5 e1 ff ff b8 ff ff ff ff 48 83 c4 28 65 0f c1 05 1c 25 e9 7e 83 f8 01 0f 85 da 01 00 00 4d 85 ff 74 01 fb 48 8d 65 d8 <5b> 41 5c 41 5d 41 5e 41 5f 5d e9 bd 9b f7 03 65 8b 05 37 6d ea 7e
RSP: 0018:ffff88803568bae8 EFLAGS: 00000206
RAX: 0000000000000001 RBX: 0000000000000001 RCX: ffffffff88b07000
RDX: 2035f557d144d7ca RSI: 000000006b9e3924 RDI: ffff88802f6ace30
RBP: ffff88803568bb10 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000050 R11: 0000000000000000 R12: 0000000000000000
R13: 0000000000000000 R14: ffffffff865fca80 R15: 0000000000000200
 fs_reclaim_acquire mm/page_alloc.c:3715 [inline]
 fs_reclaim_acquire+0x70/0x100 mm/page_alloc.c:3706
 might_alloc include/linux/sched/mm.h:312 [inline]
 slab_pre_alloc_hook mm/slub.c:3746 [inline]
 slab_alloc_node mm/slub.c:3827 [inline]
 __do_kmalloc_node mm/slub.c:3965 [inline]
 __kmalloc_node+0x8b/0x370 mm/slub.c:3973
 kmalloc_array_node include/linux/slab.h:726 [inline]
 kcalloc_node include/linux/slab.h:731 [inline]
 memcg_alloc_slab_cgroups+0x3c/0xa0 mm/memcontrol.c:3015
 account_slab mm/slub.c:2301 [inline]
 allocate_slab mm/slub.c:2356 [inline]
 new_slab+0x108/0x3d0 mm/slub.c:2391
 ___slab_alloc+0x63b/0x10f0 mm/slub.c:3525
 __kmem_cache_alloc_bulk mm/slub.c:4555 [inline]
 kmem_cache_alloc_bulk+0x222/0x710 mm/slub.c:4629
 __io_alloc_req_refill+0xeb/0x390 io_uring/io_uring.c:1101
 io_alloc_req io_uring/io_uring.h:405 [inline]
 io_submit_sqes+0x652/0xd60 io_uring/io_uring.c:2481
 __do_sys_io_uring_enter+0x4df/0xaa0 io_uring/io_uring.c:3668
 __se_sys_io_uring_enter io_uring/io_uring.c:3603 [inline]
 __x64_sys_io_uring_enter+0x2a/0x40 io_uring/io_uring.c:3603
 x64_sys_call+0x14b9/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:427
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f85e4c8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f85e591c028 EFLAGS: 00000246 ORIG_RAX: 00000000000001aa
RAX: ffffffffffffffda RBX: 00007f85e4dcbf80 RCX: 00007f85e4c8fd6d
RDX: 0000000000000000 RSI: 000000000000279e RDI: 0000000000000006
RBP: 00007f85e4cf14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007f85e4dcbf80 R15: 00007f85e58fc000
 </TASK>
Modules linked in:
CR2: 000000000001592d
---[ end trace 0000000000000000 ]---
RIP: 0010:rb_next+0x18/0x50 lib/rbtree.c:505
Code: 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 48 8b 17 48 39 d7 74 3d 48 8b 47 08 48 85 c0 74 20 49 89 c0 <48> 8b 40 10 48 85 c0 75 f4 4c 89 c0 e9 f2 35 21 00 48 3b 78 08 75
RSP: 0018:ffff88807dc05ee0 EFLAGS: 00010006
RAX: 000000000001591d RBX: ffff8880308cbe18 RCX: ffffffff84ef4136
RDX: 000000000001591c RSI: ffffffff84ef414c RDI: ffff8880308cbe18
RBP: ffff88807dc05f00 R08: 000000000001591d R09: 0000000000000001
R10: ffff8880308cbe18 R11: 0000000000000000 R12: ffff88807dc20990
R13: 000000000001591c R14: ffff88807dc208c0 R15: 0000000000000001
FS:  00007f85e591c640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000000001592d CR3: 0000000027d38003 CR4: 0000000000770ef0
DR0: 00000000200000c0 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	40 00 90 90 90 90 90 	rex add %dl,-0x6f6f6f70(%rax)
   7:	90                   	nop
   8:	90                   	nop
   9:	90                   	nop
   a:	90                   	nop
   b:	90                   	nop
   c:	90                   	nop
   d:	90                   	nop
   e:	90                   	nop
   f:	90                   	nop
  10:	90                   	nop
  11:	90                   	nop
  12:	f3 0f 1e fa          	endbr64
  16:	48 8b 17             	mov    (%rdi),%rdx
  19:	48 39 d7             	cmp    %rdx,%rdi
  1c:	74 3d                	je     0x5b
  1e:	48 8b 47 08          	mov    0x8(%rdi),%rax
  22:	48 85 c0             	test   %rax,%rax
  25:	74 20                	je     0x47
  27:	49 89 c0             	mov    %rax,%r8
* 2a:	48 8b 40 10          	mov    0x10(%rax),%rax <-- trapping instruction
  2e:	48 85 c0             	test   %rax,%rax
  31:	75 f4                	jne    0x27
  33:	4c 89 c0             	mov    %r8,%rax
  36:	e9 f2 35 21 00       	jmp    0x21362d
  3b:	48 3b 78 08          	cmp    0x8(%rax),%rdi
  3f:	75                   	.byte 0x75
