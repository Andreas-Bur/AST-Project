bcachefs (loop3): mounting version 1.7: (unknown version) opts=errors=continue,metadata_checksum=none,data_checksum=none,compression=lz4,nojournal_transaction_names
superblock marked clean but clean section not present, fixing
BUG: kernel NULL pointer dereference, address: 0000000000000010
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 3358d067 P4D 3358d067 PUD 157a7067 PMD 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 0 PID: 32589 Comm: syz-executor.3 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:bch2_fs_recovery+0x84/0x2b20 fs/bcachefs/recovery.c:575
Code: c7 c7 00 f0 ff ff 48 89 c3 48 89 c6 48 89 85 28 ff ff ff e8 de ed e9 fe 48 81 fb 00 f0 ff ff 0f 87 52 0f 00 00 e8 4c f2 e9 fe <48> 8b 4b 10 49 8d 84 24 cc 01 00 00 4c 89 e7 48 89 c2 48 c7 c6 b0
RSP: 0018:ffff8880207878c0 EFLAGS: 00010216
RAX: 0000000000038ffa RBX: 0000000000000000 RCX: ffffc9000b13e000
RDX: 0000000000040000 RSI: ffffffff823fccb4 RDI: 0000000000000007
RBP: ffff8880207879d0 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffff88804a000000
R13: ffff88804a000000 R14: 0000000000000000 R15: ffff88804a000208
FS:  00007f9db82d6640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000010 CR3: 000000002a4b6001 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
PKRU: 55555554
Call Trace:
 <TASK>
 bch2_fs_start+0x1fe/0x3d0 fs/bcachefs/super.c:1042
 bch2_fs_open+0x13f1/0x1ec0 fs/bcachefs/super.c:2101
 bch2_mount+0x684/0x8a0 fs/bcachefs/fs.c:1900
 legacy_get_tree+0x3f/0xb0 fs/fs_context.c:662
 vfs_get_tree+0x3a/0x160 fs/super.c:1779
 do_new_mount fs/namespace.c:3352 [inline]
 path_mount+0xcb0/0x11d0 fs/namespace.c:3679
 do_mount fs/namespace.c:3692 [inline]
 __do_sys_mount fs/namespace.c:3898 [inline]
 __se_sys_mount fs/namespace.c:3875 [inline]
 __x64_sys_mount+0x17b/0x1c0 fs/namespace.c:3875
 x64_sys_call+0x2072/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:166
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f9db7491b3e
Code: 48 c7 c0 ff ff ff ff eb aa e8 be 0d 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 f3 0f 1e fa 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f9db82d5e38 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 0000000000005926 RCX: 00007f9db7491b3e
RDX: 00000000200058c0 RSI: 0000000020000040 RDI: 00007f9db82d5e90
RBP: 00007f9db82d5ed0 R08: 00007f9db82d5ed0 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000202 R12: 00000000200058c0
R13: 0000000020000040 R14: 00007f9db82d5e90 R15: 0000000020000000
 </TASK>
Modules linked in:
CR2: 0000000000000010
---[ end trace 0000000000000000 ]---
RIP: 0010:bch2_fs_recovery+0x84/0x2b20 fs/bcachefs/recovery.c:575
Code: c7 c7 00 f0 ff ff 48 89 c3 48 89 c6 48 89 85 28 ff ff ff e8 de ed e9 fe 48 81 fb 00 f0 ff ff 0f 87 52 0f 00 00 e8 4c f2 e9 fe <48> 8b 4b 10 49 8d 84 24 cc 01 00 00 4c 89 e7 48 89 c2 48 c7 c6 b0
RSP: 0018:ffff8880207878c0 EFLAGS: 00010216
RAX: 0000000000038ffa RBX: 0000000000000000 RCX: ffffc9000b13e000
RDX: 0000000000040000 RSI: ffffffff823fccb4 RDI: 0000000000000007
RBP: ffff8880207879d0 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffff88804a000000
R13: ffff88804a000000 R14: 0000000000000000 R15: ffff88804a000208
FS:  00007f9db82d6640(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000010 CR3: 000000002a4b6001 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	c7 c7 00 f0 ff ff    	mov    $0xfffff000,%edi
   6:	48 89 c3             	mov    %rax,%rbx
   9:	48 89 c6             	mov    %rax,%rsi
   c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  13:	e8 de ed e9 fe       	call   0xfee9edf6
  18:	48 81 fb 00 f0 ff ff 	cmp    $0xfffffffffffff000,%rbx
  1f:	0f 87 52 0f 00 00    	ja     0xf77
  25:	e8 4c f2 e9 fe       	call   0xfee9f276
* 2a:	48 8b 4b 10          	mov    0x10(%rbx),%rcx <-- trapping instruction
  2e:	49 8d 84 24 cc 01 00 	lea    0x1cc(%r12),%rax
  35:	00
  36:	4c 89 e7             	mov    %r12,%rdi
  39:	48 89 c2             	mov    %rax,%rdx
  3c:	48                   	rex.W
  3d:	c7                   	.byte 0xc7
  3e:	c6                   	(bad)
  3f:	b0                   	.byte 0xb0
