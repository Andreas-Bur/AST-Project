BUG: kernel NULL pointer dereference, address: 0000000000000030
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 0 P4D 0 
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 1 PID: 6196 Comm: syz-executor.1 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:write_special_inodes+0x38/0x70 fs/jfs/jfs_logmgr.c:208
Code: 53 e8 6c 71 5f ff 49 8b 45 00 49 39 c5 74 43 48 8d 58 c8 e8 5a 71 5f ff 48 8b 43 10 48 8b 78 30 2e e8 0c 0b 29 03 48 8b 43 28 <48> 8b 78 30 2e e8 fe 0a 29 03 48 8b 83 b0 00 00 00 48 8b 78 30 2e
RSP: 0018:ffff888010fbbc38 EFLAGS: 00010296
RAX: 0000000000000000 RBX: ffff88802a4e7b00 RCX: ffffffff8140fe2f
RDX: ffff88800e0da1c0 RSI: ffffffff8140fe3b RDI: 0000000000000005
RBP: ffff888010fbbc50 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff81415fd0
R13: ffff88802a312800 R14: ffff88802a3128b8 R15: 0000000000000001
FS:  0000000000000000(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000030 CR3: 000000000f0e2004 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 lmLogSync+0x231/0x310 fs/jfs/jfs_logmgr.c:937
 jfs_syncpt+0x6f/0x80 fs/jfs/jfs_logmgr.c:1041
 jfs_sync_fs+0x51/0x70 fs/jfs/super.c:685
 sync_filesystem fs/sync.c:56 [inline]
 sync_filesystem+0x8d/0x140 fs/sync.c:30
 generic_shutdown_super+0x39/0x180 fs/super.c:620
 kill_block_super+0x22/0x50 fs/super.c:1675
 deactivate_locked_super+0x55/0x100 fs/super.c:472
 deactivate_super+0x83/0xa0 fs/super.c:505
 cleanup_mnt+0x17e/0x210 fs/namespace.c:1267
 __cleanup_mnt+0x1a/0x30 fs/namespace.c:1274
 task_work_run+0xa1/0x110 kernel/task_work.c:180
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0x537/0x1360 kernel/exit.c:878
 do_group_exit+0x5a/0xf0 kernel/exit.c:1027
 __do_sys_exit_group kernel/exit.c:1038 [inline]
 __se_sys_exit_group kernel/exit.c:1036 [inline]
 __x64_sys_exit_group+0x20/0x20 kernel/exit.c:1036
 x64_sys_call+0x1a0b/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:232
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fcece48fd6d
Code: Unable to access opcode bytes at 0x7fcece48fd43.
RSP: 002b:00007ffcb4f4cfb8 EFLAGS: 00000206 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00000000ffffffff RCX: 00007fcece48fd6d
RDX: 00007fcece48ea8f RSI: 0000000000000000 RDI: 0000000000000000
RBP: 00007ffcb4f4d180 R08: 0000000000000000 R09: 00007fcece4f029d
R10: 0000000000000000 R11: 0000000000000206 R12: 00007fcece4f029d
R13: 0000000000000002 R14: 000055555ed629b0 R15: 00007ffcb4f4f350
 </TASK>
Modules linked in:
CR2: 0000000000000030
---[ end trace 0000000000000000 ]---
RIP: 0010:write_special_inodes+0x38/0x70 fs/jfs/jfs_logmgr.c:208
Code: 53 e8 6c 71 5f ff 49 8b 45 00 49 39 c5 74 43 48 8d 58 c8 e8 5a 71 5f ff 48 8b 43 10 48 8b 78 30 2e e8 0c 0b 29 03 48 8b 43 28 <48> 8b 78 30 2e e8 fe 0a 29 03 48 8b 83 b0 00 00 00 48 8b 78 30 2e
RSP: 0018:ffff888010fbbc38 EFLAGS: 00010296
RAX: 0000000000000000 RBX: ffff88802a4e7b00 RCX: ffffffff8140fe2f
RDX: ffff88800e0da1c0 RSI: ffffffff8140fe3b RDI: 0000000000000005
RBP: ffff888010fbbc50 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff81415fd0
R13: ffff88802a312800 R14: ffff88802a3128b8 R15: 0000000000000001
FS:  0000000000000000(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000030 CR3: 000000000f0e2004 CR4: 0000000000770ef0
PKRU: 55555554
----------------
Code disassembly (best guess):
   0:	53                   	push   %rbx
   1:	e8 6c 71 5f ff       	call   0xff5f7172
   6:	49 8b 45 00          	mov    0x0(%r13),%rax
   a:	49 39 c5             	cmp    %rax,%r13
   d:	74 43                	je     0x52
   f:	48 8d 58 c8          	lea    -0x38(%rax),%rbx
  13:	e8 5a 71 5f ff       	call   0xff5f7172
  18:	48 8b 43 10          	mov    0x10(%rbx),%rax
  1c:	48 8b 78 30          	mov    0x30(%rax),%rdi
  20:	2e e8 0c 0b 29 03    	cs call 0x3290b32
  26:	48 8b 43 28          	mov    0x28(%rbx),%rax
* 2a:	48 8b 78 30          	mov    0x30(%rax),%rdi <-- trapping instruction
  2e:	2e e8 fe 0a 29 03    	cs call 0x3290b32
  34:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
  3b:	48 8b 78 30          	mov    0x30(%rax),%rdi
  3f:	2e                   	cs
