======================================================
WARNING: possible circular locking dependency detected
6.9.0-rc4 #2 Not tainted
------------------------------------------------------
kswapd0/83 is trying to acquire lock:
ffff88801184df58 (&xfs_dir_ilock_class){++++}-{3:3}, at: xfs_ilock+0x241/0x2e0 fs/xfs/xfs_inode.c:206

but task is already holding lock:
ffffffff865fa500 (fs_reclaim){+.+.}-{0:0}, at: balance_pgdat+0xa5/0xec0 mm/vmscan.c:6782

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (fs_reclaim){+.+.}-{0:0}:
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       __fs_reclaim_acquire mm/page_alloc.c:3698 [inline]
       fs_reclaim_acquire+0xad/0x100 mm/page_alloc.c:3712
       might_alloc include/linux/sched/mm.h:312 [inline]
       slab_pre_alloc_hook mm/slub.c:3746 [inline]
       slab_alloc_node mm/slub.c:3827 [inline]
       __do_kmalloc_node mm/slub.c:3965 [inline]
       __kmalloc+0x83/0x350 mm/slub.c:3979
       kmalloc include/linux/slab.h:632 [inline]
       xfs_attr_shortform_list fs/xfs/xfs_attr_list.c:115 [inline]
       xfs_attr_list_ilocked+0x296/0x8b0 fs/xfs/xfs_attr_list.c:527
       xfs_attr_list+0x97/0xd0 fs/xfs/xfs_attr_list.c:547
       xfs_vn_listxattr+0xaa/0x110 fs/xfs/xfs_xattr.c:314
       vfs_listxattr+0x63/0xc0 fs/xattr.c:493
       listxattr+0x73/0x170 fs/xattr.c:840
       path_listxattr+0x5d/0xd0 fs/xattr.c:864
       __do_sys_llistxattr fs/xattr.c:882 [inline]
       __se_sys_llistxattr fs/xattr.c:879 [inline]
       __x64_sys_llistxattr+0x24/0x30 fs/xattr.c:879
       x64_sys_call+0x199d/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:196
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x77/0x7f

-> #0 (&xfs_dir_ilock_class){++++}-{3:3}:
       check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain kernel/locking/lockdep.c:3869 [inline]
       __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
       lock_acquire kernel/locking/lockdep.c:5754 [inline]
       lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
       down_write_nested+0x45/0xe0 kernel/locking/rwsem.c:1695
       xfs_ilock+0x241/0x2e0 fs/xfs/xfs_inode.c:206
       xfs_reclaim_inode fs/xfs/xfs_icache.c:945 [inline]
       xfs_icwalk_process_inode fs/xfs/xfs_icache.c:1631 [inline]
       xfs_icwalk_ag+0x9b9/0xdc0 fs/xfs/xfs_icache.c:1713
       xfs_icwalk+0x52/0xe0 fs/xfs/xfs_icache.c:1762
       xfs_reclaim_inodes_nr+0xc0/0x100 fs/xfs/xfs_icache.c:1011
       xfs_fs_free_cached_objects+0x27/0x30 fs/xfs/xfs_super.c:1161
       super_cache_scan+0x21f/0x270 fs/super.c:227
       do_shrink_slab+0x240/0xa90 mm/shrinker.c:435
       shrink_slab_memcg mm/shrinker.c:548 [inline]
       shrink_slab+0x78f/0xed0 mm/shrinker.c:626
       shrink_one+0x1de/0x2d0 mm/vmscan.c:4774
       shrink_many mm/vmscan.c:4835 [inline]
       lru_gen_shrink_node mm/vmscan.c:4935 [inline]
       shrink_node+0x11a7/0x1d50 mm/vmscan.c:5894
       kswapd_shrink_node mm/vmscan.c:6704 [inline]
       balance_pgdat+0x5df/0xec0 mm/vmscan.c:6895
       kswapd+0x2fa/0x660 mm/vmscan.c:7164
       kthread+0x127/0x160 kernel/kthread.c:388
       ret_from_fork+0x54/0x60 arch/x86/kernel/process.c:147
       ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(fs_reclaim);
                               lock(&xfs_dir_ilock_class);
                               lock(fs_reclaim);
  lock(&xfs_dir_ilock_class);

 *** DEADLOCK ***

2 locks held by kswapd0/83:
 #0: ffffffff865fa500 (fs_reclaim){+.+.}-{0:0}, at: balance_pgdat+0xa5/0xec0 mm/vmscan.c:6782
 #1: ffff88807b24d0e0 (&type->s_umount_key#77){++++}-{3:3}, at: super_trylock_shared fs/super.c:561 [inline]
 #1: ffff88807b24d0e0 (&type->s_umount_key#77){++++}-{3:3}, at: super_cache_scan+0x53/0x270 fs/super.c:196

stack backtrace:
CPU: 1 PID: 83 Comm: kswapd0 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xda/0x140 lib/dump_stack.c:114
 dump_stack+0x19/0x20 lib/dump_stack.c:123
 print_circular_bug+0x2d5/0x430 kernel/locking/lockdep.c:2060
 check_noncircular+0x10e/0x120 kernel/locking/lockdep.c:2187
 check_prev_add+0xe4/0x9e0 kernel/locking/lockdep.c:3134
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain kernel/locking/lockdep.c:3869 [inline]
 __lock_acquire+0x1214/0x15f0 kernel/locking/lockdep.c:5137
 lock_acquire kernel/locking/lockdep.c:5754 [inline]
 lock_acquire+0xab/0x2c0 kernel/locking/lockdep.c:5719
 down_write_nested+0x45/0xe0 kernel/locking/rwsem.c:1695
 xfs_ilock+0x241/0x2e0 fs/xfs/xfs_inode.c:206
 xfs_reclaim_inode fs/xfs/xfs_icache.c:945 [inline]
 xfs_icwalk_process_inode fs/xfs/xfs_icache.c:1631 [inline]
 xfs_icwalk_ag+0x9b9/0xdc0 fs/xfs/xfs_icache.c:1713
 xfs_icwalk+0x52/0xe0 fs/xfs/xfs_icache.c:1762
 xfs_reclaim_inodes_nr+0xc0/0x100 fs/xfs/xfs_icache.c:1011
 xfs_fs_free_cached_objects+0x27/0x30 fs/xfs/xfs_super.c:1161
 super_cache_scan+0x21f/0x270 fs/super.c:227
 do_shrink_slab+0x240/0xa90 mm/shrinker.c:435
 shrink_slab_memcg mm/shrinker.c:548 [inline]
 shrink_slab+0x78f/0xed0 mm/shrinker.c:626
 shrink_one+0x1de/0x2d0 mm/vmscan.c:4774
 shrink_many mm/vmscan.c:4835 [inline]
 lru_gen_shrink_node mm/vmscan.c:4935 [inline]
 shrink_node+0x11a7/0x1d50 mm/vmscan.c:5894
 kswapd_shrink_node mm/vmscan.c:6704 [inline]
 balance_pgdat+0x5df/0xec0 mm/vmscan.c:6895
 kswapd+0x2fa/0x660 mm/vmscan.c:7164
 kthread+0x127/0x160 kernel/kthread.c:388
 ret_from_fork+0x54/0x60 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
 </TASK>
