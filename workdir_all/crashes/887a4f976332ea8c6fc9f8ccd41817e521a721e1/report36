------------[ cut here ]------------
WARNING: CPU: 1 PID: 9342 at kernel/workqueue.c:2322 __queue_work+0x8cd/0xb60 kernel/workqueue.c:2321
Modules linked in:
CPU: 1 PID: 9342 Comm: syz-executor.3 Not tainted 6.9.0-rc4 #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:__queue_work+0x8cd/0xb60 kernel/workqueue.c:2321
Code: 69 7a 18 00 31 ff 65 4c 8b 2d df cd f1 7e 41 8b 5d 2c 83 e3 20 89 de e8 a1 75 18 00 85 db 0f 85 d7 00 00 00 e8 44 7a 18 00 90 <0f> 0b 90 e9 5d fa ff ff e8 36 7a 18 00 90 0f 0b 90 e9 0d fa ff ff
RSP: 0018:ffff88807dd05e00 EFLAGS: 00010046
RAX: 0000000000000000 RBX: 0000000000000100 RCX: ffffffff8111448e
RDX: ffff88801bc321c0 RSI: ffffffff811144bc RDI: 0000000000000005
RBP: ffff88807dd05e48 R08: 0000000000080000 R09: 0000000000000001
R10: 0000000000000100 R11: 0000000000000001 R12: ffff888027ce0c10
R13: ffffffff81114da0 R14: ffff888023d0a800 R15: 0000000000200000
FS:  00007fc2f4937640(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fc2f4936f88 CR3: 000000002a8d6006 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <IRQ>
 delayed_work_timer_fn+0x21/0x30 kernel/workqueue.c:2529
 call_timer_fn+0xb8/0x3b0 kernel/time/timer.c:1793
 expire_timers kernel/time/timer.c:1839 [inline]
 __run_timers+0x264/0x4f0 kernel/time/timer.c:2418
 __run_timer_base kernel/time/timer.c:2429 [inline]
 __run_timer_base kernel/time/timer.c:2422 [inline]
 run_timer_base kernel/time/timer.c:2438 [inline]
 run_timer_softirq+0x9f/0x130 kernel/time/timer.c:2448
 __do_softirq+0xca/0x3c8 kernel/softirq.c:554
 invoke_softirq kernel/softirq.c:428 [inline]
 __irq_exit_rcu kernel/softirq.c:633 [inline]
 irq_exit_rcu+0x8d/0xb0 kernel/softirq.c:645
 instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]
 sysvec_apic_timer_interrupt+0x7e/0x90 arch/x86/kernel/apic/apic.c:1043
 </IRQ>
 <TASK>
 asm_sysvec_apic_timer_interrupt+0x1f/0x30 arch/x86/include/asm/idtentry.h:702
RIP: 0010:arch_static_branch arch/x86/include/asm/jump_label.h:27 [inline]
RIP: 0010:memcg_account_kmem+0x20/0x70 mm/memcontrol.c:3259
Code: 90 90 90 90 90 90 90 90 90 90 55 48 89 e5 41 54 49 89 fc 53 89 f3 9c 58 fa f6 c4 02 75 17 89 f2 be 32 00 00 00 e8 e0 fe ff ff <66> 90 5b 41 5c 5d e9 00 84 b7 03 e8 c0 27 d4 ff 89 da be 32 00 00
RSP: 0018:ffff88802afbbc90 EFLAGS: 00000202
RAX: 00000000000090b5 RBX: 0000000000000001 RCX: 0000000000000040
RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffff8158bd24
RBP: ffff88802afbbca0 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000028 R11: 0000000000000000 R12: ffff88802ab89000
R13: ffff88802adac9c0 R14: 0000000000002cc0 R15: 0000000000000001
 obj_cgroup_charge_pages mm/memcontrol.c:3306 [inline]
 obj_cgroup_charge+0x118/0x1b0 mm/memcontrol.c:3593
 __memcg_slab_pre_alloc_hook mm/slub.c:1919 [inline]
 memcg_slab_pre_alloc_hook mm/slub.c:1940 [inline]
 slab_pre_alloc_hook mm/slub.c:3751 [inline]
 kmem_cache_alloc_bulk+0x5b6/0x710 mm/slub.c:4625
 __io_alloc_req_refill+0xeb/0x390 io_uring/io_uring.c:1101
 io_alloc_req io_uring/io_uring.h:405 [inline]
 io_submit_sqes+0x652/0xd60 io_uring/io_uring.c:2481
 __do_sys_io_uring_enter+0x4df/0xaa0 io_uring/io_uring.c:3668
 __se_sys_io_uring_enter io_uring/io_uring.c:3603 [inline]
 __x64_sys_io_uring_enter+0x2a/0x40 io_uring/io_uring.c:3603
 x64_sys_call+0x14b9/0x20b0 arch/x86/include/generated/asm/syscalls_64.h:427
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc3/0x200 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fc2f3c8fd6d
Code: c3 e8 97 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fc2f4937028 EFLAGS: 00000246 ORIG_RAX: 00000000000001aa
RAX: ffffffffffffffda RBX: 00007fc2f3dcbf80 RCX: 00007fc2f3c8fd6d
RDX: 0000000000000000 RSI: 0000000000003cea RDI: 0000000000000003
RBP: 00007fc2f3cf14cd R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007fc2f3dcbf80 R15: 00007fc2f4917000
 </TASK>
irq event stamp: 37049
hardirqs last  enabled at (37048): [<ffffffff84f35414>] __do_softirq+0xa4/0x3c8 kernel/softirq.c:538
hardirqs last disabled at (37049): [<ffffffff84f33ff0>] __raw_spin_lock_irq include/linux/spinlock_api_smp.h:117 [inline]
hardirqs last disabled at (37049): [<ffffffff84f33ff0>] _raw_spin_lock_irq+0x50/0x60 kernel/locking/spinlock.c:170
softirqs last  enabled at (37038): [<ffffffff83fef635>] spin_unlock_bh include/linux/spinlock.h:396 [inline]
softirqs last  enabled at (37038): [<ffffffff83fef635>] release_sock+0xe5/0x110 net/core/sock.c:3559
softirqs last disabled at (37047): [<ffffffff810e02cd>] invoke_softirq kernel/softirq.c:428 [inline]
softirqs last disabled at (37047): [<ffffffff810e02cd>] __irq_exit_rcu kernel/softirq.c:633 [inline]
softirqs last disabled at (37047): [<ffffffff810e02cd>] irq_exit_rcu+0x8d/0xb0 kernel/softirq.c:645
---[ end trace 0000000000000000 ]---
----------------
Code disassembly (best guess):
   0:	90                   	nop
   1:	90                   	nop
   2:	90                   	nop
   3:	90                   	nop
   4:	90                   	nop
   5:	90                   	nop
   6:	90                   	nop
   7:	90                   	nop
   8:	90                   	nop
   9:	90                   	nop
   a:	55                   	push   %rbp
   b:	48 89 e5             	mov    %rsp,%rbp
   e:	41 54                	push   %r12
  10:	49 89 fc             	mov    %rdi,%r12
  13:	53                   	push   %rbx
  14:	89 f3                	mov    %esi,%ebx
  16:	9c                   	pushf
  17:	58                   	pop    %rax
  18:	fa                   	cli
  19:	f6 c4 02             	test   $0x2,%ah
  1c:	75 17                	jne    0x35
  1e:	89 f2                	mov    %esi,%edx
  20:	be 32 00 00 00       	mov    $0x32,%esi
  25:	e8 e0 fe ff ff       	call   0xffffff0a
* 2a:	66 90                	xchg   %ax,%ax <-- trapping instruction
  2c:	5b                   	pop    %rbx
  2d:	41 5c                	pop    %r12
  2f:	5d                   	pop    %rbp
  30:	e9 00 84 b7 03       	jmp    0x3b78435
  35:	e8 c0 27 d4 ff       	call   0xffd427fa
  3a:	89 da                	mov    %ebx,%edx
  3c:	be                   	.byte 0xbe
  3d:	32 00                	xor    (%rax),%al
